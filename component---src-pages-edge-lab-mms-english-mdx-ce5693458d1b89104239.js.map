{"version":3,"sources":["webpack:///../instana-lab/src/pages/edge-lab/mms/english.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","InlineNotification","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","kind","isMDXComponent"],"mappings":"wPAQaA,G,UAAe,IAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAkBL,EAAc,mBAChCM,EAAqBN,EAAc,sBACnCO,EAAc,CAClBR,gBAEIS,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGT,EACF,8BACD,OAAO,YAACM,EAAD,eAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,cAG5E,YAACP,EAAD,CAAiBO,QAAQ,mBACvB,2IAEF,0FACA,sBACE,kBAAIC,WAAW,MAAf,uEAEF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,yIAGL,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,yEAEF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,qBAEL,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,yBAApB,sVAAqa,sBAAQA,WAAW,MAAnB,oCAAra,MAEF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,0EAGL,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,uJAEF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,qOAGL,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,iGAEF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,sPAIL,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,mCAEF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,wEAEL,yJAAwI,sBAAQA,WAAW,KAAnB,qHACxI,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,qCAEF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,yEAEL,YAACP,EAAD,CAAoBQ,KAAK,OAAOF,QAAQ,sBACtC,qBAAG,sBAAQC,WAAW,KAAnB,SAAH,qKAEF,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,4EAEF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,yBAMTH,EAAWK,gBAAiB","file":"component---src-pages-edge-lab-mms-english-mdx-ce5693458d1b89104239.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mkeppel/Documents/GitHub/instana-lab/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`In this section you will use the Model Management System (MMS) of IEAM to (re-)configure a deployed edge service.`}</p>\n    </PageDescription>\n    <h2>{`Using the Hello MMS Example Edge Service with Deployment Pattern`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Register your edge node with Horizon to use the hello-mms pattern:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`export SERVICE_NAME=ibm.hello-mms\nhzn register -p IBM/pattern-$SERVICE_NAME-$(hzn architecture) -s $SERVICE_NAME --serviceorg IBM\n`}</code></pre>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`After the service has started, list the docker containers to see it:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`sudo docker ps\n`}</code></pre>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\"><strong parentName=\"li\">{`Open another terminal`}</strong>{` and view the hello-mms service output with the “follow” flag. This sample service repeatedly checks for an updated config file (config.json) that contains a parameter of who it should say “hello” to. The initial config file is built into the docker image. Updated config files can come via MMS. Initially you should see the message like: `}<strong parentName=\"li\">{`says: Hello from the dockerfile!`}</strong>{`.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`export SERVICE_NAME=ibm.hello-mms\nhzn service log -f $SERVICE_NAME\n`}</code></pre>\n    <ol {...{\n      \"start\": 4\n    }}>\n      <li parentName=\"ol\">{`While observing the service output in the other terminal, get the sample files that will be needed to create and publish a new config file in MMS:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`wget -q --show-progress https://github.com/open-horizon/examples/raw/master/edge/services/helloMMS/object.json\nwget -q --show-progress https://github.com/open-horizon/examples/raw/master/edge/services/helloMMS/config.json\n`}</code></pre>\n    <ol {...{\n      \"start\": 5\n    }}>\n      <li parentName=\"ol\">{`Modify config.json and publish it (along with its metadata object.json) as a new mms object:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`jq '.HW_WHO = \"from the MMS\"' config.json > config.tmp && mv config.tmp config.json\nexport HZN_DEVICE_ID=\"\\${HZN_EXCHANGE_NODE_AUTH%%:*}\"   # this env var is referenced in object.json\nhzn mms object publish -m object.json -f config.json\n`}</code></pre>\n    <ol {...{\n      \"start\": 6\n    }}>\n      <li parentName=\"ol\">{`View the published mms object:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`hzn mms object list -t $HZN_DEVICE_ID.hello-mms -i config.json -d\n`}</code></pre>\n    <p>{`Once the Object status changes to delivered you will see the output of the hello-mms service (in the other terminal) change from `}<strong parentName=\"p\">{`<`}{`your-node-id`}{`>`}{` says: Hello from the dockerfile! to `}{`<`}{`your-node-id`}{`>`}{` says: Hello from the MMS!`}</strong></p>\n    <ol {...{\n      \"start\": 7\n    }}>\n      <li parentName=\"ol\">{`Delete the published mms object:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`hzn mms object delete -t $HZN_DEVICE_ID.hello-mms --id config.json\n`}</code></pre>\n    <InlineNotification kind=\"info\" mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Note:`}</strong>{` in the service output in the other terminal that this will cause the service to revert to the original config file, and therefore the original “hello” message.`}</p>\n    </InlineNotification>\n    <ol {...{\n      \"start\": 8\n    }}>\n      <li parentName=\"ol\">{`Unregister your edge node (which will also stop the hello-mms service):`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`hzn unregister -f\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}