{"version":3,"sources":["webpack:///../instana-lab/src/pages/edge-lab/mms/deutsch.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","InlineNotification","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","kind","isMDXComponent"],"mappings":"wPAQaA,G,UAAe,IAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAkBL,EAAc,mBAChCM,EAAqBN,EAAc,sBACnCO,EAAc,CAClBR,gBAEIS,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGT,EACF,8BACD,OAAO,YAACM,EAAD,eAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,cAG5E,YAACP,EAAD,CAAiBO,QAAQ,mBACvB,sKAEF,0FACA,sBACE,kBAAIC,WAAW,MAAf,gFAEF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,yIAGL,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,yFAEF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,qBAEL,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,oCAApB,4aAAsgB,sBAAQA,WAAW,MAAnB,oCAAtgB,MAEF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,0EAGL,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,uMAEF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,qOAGL,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,4GAEF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,sPAIL,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,kDAEF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,wEAEL,yJAAwI,sBAAQA,WAAW,KAAnB,qHACxI,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,gDAEF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,yEAEL,YAACP,EAAD,CAAoBQ,KAAK,OAAOF,QAAQ,sBACtC,qBAAG,sBAAQC,WAAW,KAAnB,YAAH,wLAEF,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,yGAEF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,yBAMTH,EAAWK,gBAAiB","file":"component---src-pages-edge-lab-mms-deutsch-mdx-9a1404e5eef28da6a418.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mkeppel/Documents/GitHub/instana-lab/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`In diesem Abschnitt verwenden Sie das Model Management System (MMS) von IEAM, um einen bereitgestellten Edge-Service (neu) zu konfigurieren.`}</p>\n    </PageDescription>\n    <h2>{`Using the Hello MMS Example Edge Service with Deployment Pattern`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Registrieren Sie Ihren Edge Device um das Pattern “hello-mms” zu verwenden:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`export SERVICE_NAME=ibm.hello-mms\nhzn register -p IBM/pattern-$SERVICE_NAME-$(hzn architecture) -s $SERVICE_NAME --serviceorg IBM\n`}</code></pre>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Nachdem der Dienst gestartet ist, lassen Sie sich sie die Docker Container anzeigen:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`sudo docker ps\n`}</code></pre>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\"><strong parentName=\"li\">{`Öffnen Sie ein weiteres Terminal`}</strong>{` und beobachten Sie die Ausgabe des hello-mms-Dienstes mit dem Flag “follow”. Dieser Beispieldienst prüft wiederholt,ob eine aktualisierte Konfigurationsdatei (config.json) vorhanden ist, die einen Parameter enthält, zu dem er “hallo” sagen soll. Die anfängliche Konfigurationsdatei ist in das Docker-Image integriert. Aktualisierte Config-Dateien können per MMS kommen. Anfänglich sollten Sie die Nachricht wie folgt sehen: `}<strong parentName=\"li\">{`says: Hello from the dockerfile!`}</strong>{`.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`export SERVICE_NAME=ibm.hello-mms\nhzn service log -f $SERVICE_NAME\n`}</code></pre>\n    <ol {...{\n      \"start\": 4\n    }}>\n      <li parentName=\"ol\">{`Während Sie sich den Output im anderen Terminal anzeigen lassen, holen Sie sich die Beispieldateien, die zum Erstellen und Veröffentlichen einer neuen Konfigurationsdatei in MMS benötigt werden:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`wget -q --show-progress https://github.com/open-horizon/examples/raw/master/edge/services/helloMMS/object.json\nwget -q --show-progress https://github.com/open-horizon/examples/raw/master/edge/services/helloMMS/config.json\n`}</code></pre>\n    <ol {...{\n      \"start\": 5\n    }}>\n      <li parentName=\"ol\">{`Ändern Sie die config.json und veröffentlichen Sie sie (zusammen mit object.json) als neues mms-Objekt:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`jq '.HW_WHO = \"from the MMS\"' config.json > config.tmp && mv config.tmp config.json\nexport HZN_DEVICE_ID=\"\\${HZN_EXCHANGE_NODE_AUTH%%:*}\"   # this env var is referenced in object.json\nhzn mms object publish -m object.json -f config.json\n`}</code></pre>\n    <ol {...{\n      \"start\": 6\n    }}>\n      <li parentName=\"ol\">{`Zeigen Sie das veröffentlichte mms-Objekt an:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`hzn mms object list -t $HZN_DEVICE_ID.hello-mms -i config.json -d\n`}</code></pre>\n    <p>{`Sobald der Objektstatus auf geliefert wechselt, sehen Sie, wie sich die Ausgabe des hello-mms-Dienstes (im anderen Terminal) von `}<strong parentName=\"p\">{`<`}{`your-node-id`}{`>`}{` says: Hello from the dockerfile! to `}{`<`}{`your-node-id`}{`>`}{` says: Hello from the MMS!`}</strong></p>\n    <ol {...{\n      \"start\": 7\n    }}>\n      <li parentName=\"ol\">{`Löschen Sie das veröffentlichte mms-Objekt:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`hzn mms object delete -t $HZN_DEVICE_ID.hello-mms --id config.json\n`}</code></pre>\n    <InlineNotification kind=\"info\" mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Hinweis:`}</strong>{` in der Dienstausgabe im anderen Terminal. Dies führt dazu, dass der Dienst auf die ursprüngliche Konfigurationsdatei und damit auf die ursprüngliche “hello”-Meldung zurückgreift.`}</p>\n    </InlineNotification>\n    <ol {...{\n      \"start\": 8\n    }}>\n      <li parentName=\"ol\">{`Heben Sie die Registrierung Ihres Edge Device auf (dadurch wird auch der hello-mms-Dienst gestoppt):`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`hzn unregister -f\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}