{"version":3,"sources":["webpack:///../instana-lab/src/pages/edge-lab/deploy-pattern/english.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","InlineNotification","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","kind","isMDXComponent"],"mappings":"wPAQaA,G,UAAe,IAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAkBL,EAAc,mBAChCM,EAAqBN,EAAc,sBACnCO,EAAc,CAClBR,gBAEIS,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGT,EACF,8BACD,OAAO,YAACM,EAAD,eAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,cAG5E,YAACP,EAAD,CAAiBO,QAAQ,mBACvB,wIAEF,8EACA,sEACA,gFAA+D,6BAAGC,WAAW,KAAQ,CACjF,KAAQ,uBADmD,2BAG/D,iFACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,oCAEL,uDACA,sIACA,oCAAmB,sBAAQA,WAAW,KAAnB,wBAAnB,mDACA,YAACP,EAAD,CAAoBQ,KAAK,OAAOF,QAAQ,sBACtC,qBAAG,sBAAQC,WAAW,KAAnB,SAAH,sHAEF,mEACA,sBACE,kBAAIA,WAAW,MAAf,gFAEF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,sFAGL,+DAA8C,sBAAQA,WAAW,KAAnB,YAA9C,4CACF,+BAAKA,WAAW,KAAQ,CAClB,IAAO,6BACP,IAAO,mBAEX,kEACF,+BAAKA,WAAW,KAAQ,CAClB,IAAO,qCACP,IAAO,2BAEX,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,yEAEF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,iEAEL,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,sQAEF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,0EAGL,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,2GAEF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,qBAEL,yGACF,+BAAKA,WAAW,KAAQ,CAClB,IAAO,+BACP,IAAO,qBAEX,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,uCAEF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,6CAEL,YAACP,EAAD,CAAoBQ,KAAK,OAAOF,QAAQ,sBACtC,qBAAG,sBAAQC,WAAW,KAAnB,SAAH,8CAEF,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,uDAA4E,kBAAIA,WAAW,MAAf,8BAA5E,eAEF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,yBAMTH,EAAWK,gBAAiB","file":"component---src-pages-edge-lab-deploy-pattern-english-mdx-2cd55815469bee5a9b15.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mkeppel/Documents/GitHub/instana-lab/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`In this section you will deploy the edge service that you created in a previous step to your edge environment.`}</p>\n    </PageDescription>\n    <h2>{`Deploying an edge service using a deployment pattern`}</h2>\n    <h3>{`Preconditions for deploying your own service`}</h3>\n    <p>{`  If you have not already done do, complete the section `}<a parentName=\"p\" {...{\n        \"href\": \"../service/english\"\n      }}>{`Create an Edge Service`}</a></p>\n    <p>{`  Also set your USER_ID again if you opened a new shell.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`export USER_ID=$DOCKER_HUB_ID\n`}</code></pre>\n    <h2>{`Defining a deployment pattern`}</h2>\n    <p>{`During the creation of the edge service a pattern template has been created for you in the horizon directory `}</p>\n    <p>{`Examine the `}<strong parentName=\"p\">{`horizon/pattern.json`}</strong>{` file and take notice of the structure/options.`}</p>\n    <InlineNotification kind=\"info\" mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Note:`}</strong>{` Some variables in the pattern are defined in other files. You can replace them with the real values if you like.`}</p>\n    </InlineNotification>\n    <h2>{`Publishing a pattern for the edge service`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Publish and view your edge node deployment pattern in the Horizon Exchange:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`hzn exchange pattern publish -f horizon/pattern.json\nhzn exchange pattern list\n`}</code></pre>\n    <p>{`The pattern is now also visible on the `}<strong parentName=\"p\">{`Patterns`}</strong>{` tab in IBM Edge Application Manager UI\n`}<img parentName=\"p\" {...{\n        \"src\": \"../images/IEAM-pattern.png\",\n        \"alt\": \"IEAM-pattern\"\n      }}></img></p>\n    <p>{`Click on your pattern to see the details\n`}<img parentName=\"p\" {...{\n        \"src\": \"../images/IEAM-pattern-details.png\",\n        \"alt\": \"IEAM-pattern-details\"\n      }}></img></p>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Register your edge node with Horizon to use your deployment pattern:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`hzn register -p pattern-hello-$USER_ID-$(hzn architecture)\n`}</code></pre>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`The edge device will make an agreement with one of the Horizon agreement bots (this typically takes about 15 seconds). Repeatedly query the agreements of this device until the agreement_finalized_time and agreement_execution_start_time fields are filled in:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`watch hzn agreement list\n# Press Ctrl-c to stop the output display\n`}</code></pre>\n    <ol {...{\n      \"start\": 4\n    }}>\n      <li parentName=\"ol\">{`After the agreement is made, list the docker container edge service that has been started as a result:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`sudo docker ps\n`}</code></pre>\n    <p>{`You will also see the pattern deployment in the IBM Edge Application Manager UI\n`}<img parentName=\"p\" {...{\n        \"src\": \"../images/IEAM-mypattern.png\",\n        \"alt\": \"IEAM-mypattern\"\n      }}></img></p>\n    <ol {...{\n      \"start\": 5\n    }}>\n      <li parentName=\"ol\">{`See the helloworld service output:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`sudo hzn service log -f hello-$USER_ID\n`}</code></pre>\n    <InlineNotification kind=\"info\" mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Note:`}</strong>{` Press Ctrl C to stop the command output.`}</p>\n    </InlineNotification>\n    <ol {...{\n      \"start\": 6\n    }}>\n      <li parentName=\"ol\">{`Unregister your edge node (which will also stop the `}<em parentName=\"li\">{`hello-`}{`<`}{`your-name`}{`>`}</em>{` service):`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`hzn unregister -f\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}