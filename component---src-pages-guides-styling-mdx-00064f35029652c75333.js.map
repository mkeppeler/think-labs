{"version":3,"sources":["webpack:///../instana-lab/src/pages/guides/styling.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","InlineNotification","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"wPAQaA,G,UAAe,IAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAkBL,EAAc,mBAChCM,EAAqBN,EAAc,sBACnCO,EAAc,CAClBR,gBAEIS,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGT,EACF,8BACD,OAAO,YAACM,EAAD,eAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,cAG5E,YAACP,EAAD,CAAiBO,QAAQ,mBACvB,wRAKF,sCACA,mGACF,6BAAGC,WAAW,KAAQ,CAChB,KAAQ,8FADd,mBAE2B,0BAAYA,WAAW,KAAvB,sBAHzB,uCAKA,oLAEA,yHAEA,sBACE,kBAAIA,WAAW,MAAf,YAAiC,0BAAYA,WAAW,MAAvB,iCACjC,kBAAIA,WAAW,MAAf,aAAkC,0BAAYA,WAAW,MAAvB,yBAClC,kBAAIA,WAAW,MAAf,kBAAuC,0BAAYA,WAAW,MAAvB,qBACvC,kBAAIA,WAAW,MAAf,aACJ,0BAAYA,WAAW,MAAvB,yEACI,kBAAIA,WAAW,MAAf,gBAAqC,0BAAYA,WAAW,MAAvB,kDAEvC,oDACA,YAACP,EAAD,CAAoBM,QAAQ,sBAC1B,6HAGF,8QAIA,yFACF,6BAAGC,WAAW,KAAQ,CAChB,KAAQ,0DADd,oBADE,KAIA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,gEAML,mEAAkD,0BAAYA,WAAW,KAAvB,yBAAlD,sHAOJH,EAAWI,gBAAiB","file":"component---src-pages-guides-styling-mdx-00064f35029652c75333.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mkeppel/Documents/GitHub/instana-lab/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`The carbon theme uses Sass to take advantage of the carbon-components styles and\nvariables while authoring novel components. In addition, we use css modules to\nensure we don’t collide with devs and make sure our components are portable and\nshadowable.`}</p>\n    </PageDescription>\n    <h2>{`Local Styles`}</h2>\n    <p>{`For your application’s local styles, you can just import your style sheet\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.gatsbyjs.org/docs/global-css/#adding-global-styles-without-a-layout-component\"\n      }}>{`directly into a `}<inlineCode parentName=\"a\">{`gatsby-browser.js`}</inlineCode></a>{`\nfile at the root of your project.`}</p>\n    <p>{`You can also use sass modules like we do in the theme, this would make it easier\nfor you to share your component with other theme consumers down the line.`}</p>\n    <p>{`Every Sass file in your project automatically has access to the the following\ncarbon resources:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`colors – `}<inlineCode parentName=\"li\">{`background: carbon--gray-10;`}</inlineCode></li>\n      <li parentName=\"ul\">{`spacing - `}<inlineCode parentName=\"li\">{`margin: $spacing-05;`}</inlineCode></li>\n      <li parentName=\"ul\">{`theme-tokens - `}<inlineCode parentName=\"li\">{`color: $text-01;`}</inlineCode></li>\n      <li parentName=\"ul\">{`motion -\n`}<inlineCode parentName=\"li\">{`transition: all $duration--moderate-01 motion(entrance, productive);`}</inlineCode></li>\n      <li parentName=\"ul\">{`typography - `}<inlineCode parentName=\"li\">{`@include carbon--type-style('body-long-01');`}</inlineCode></li>\n    </ul>\n    <h2>{`Targeting theme components`}</h2>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p>{`We reserve the right to change classes between major releases. Use this strategy\nat your own risk.`}</p>\n    </InlineNotification>\n    <p>{`Theme component classes have a hash of their styles tacked on to the end. This\nis both to prevent collisions, and also to prevent sneaky breaking changes to\nyour styles if we update the class underneath you and you were relying on our\nstyles.`}</p>\n    <p>{`However, you can target the classes without the hash by using a\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://css-tricks.com/almanac/selectors/a/attribute/\"\n      }}>{`partial selector`}</a>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`[class*='Banner-module--column'] {\n  color: $text-04;\n}\n`}</code></pre>\n    <p>{`This will match the class that starts with `}<inlineCode parentName=\"p\">{`Banner-module--column`}</inlineCode>{` and would be\nimmune to any changes to the hash. We may at some point remove the hash if this\nbecomes an issue.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}