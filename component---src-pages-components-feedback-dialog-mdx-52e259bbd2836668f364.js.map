{"version":3,"sources":["webpack:///../instana-lab/src/pages/components/FeedbackDialog.mdx"],"names":["name","_frontmatter","PageDescription","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"4LAUsBA,E,4DAFTC,G,UAAe,IAOtBC,GALgBF,EAKgB,kBALR,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,2EAC5B,kBAASG,KAIZG,EAAc,CAClBL,gBAEIM,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,EACF,8BACD,OAAO,YAACI,EAAD,eAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,cAG5E,YAACT,EAAD,CAAiBS,QAAQ,mBACvB,4BAAW,0BAAYC,WAAW,KAAvB,oBAAX,8HAGF,+CACA,yFAAwE,0BAAYA,WAAW,KAAvB,YAAxE,mDAC4C,0BAAYA,WAAW,KAAvB,kBAD5C,eAEA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,uCACN,0BAAYA,WAAW,KAAvB,uEADM,wDAIF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,mDAGJ,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,gWAeL,4CACA,uJAEF,6BAAGA,WAAW,KAAQ,CAChB,KAAQ,iCADd,eAFE,qCAKF,6BAAGA,WAAW,KAAQ,CAChB,KAAQ,qFADd,QALE,KAQA,yGACF,0BAAYA,WAAW,KAAvB,YADE,iGAGA,sBACE,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,cAApB,yCACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,WAApB,yBACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,QAApB,wDAEF,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,6PAgBTH,EAAWI,gBAAiB","file":"component---src-pages-components-feedback-dialog-mdx-52e259bbd2836668f364.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mkeppel/Documents/GitHub/instana-lab/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`The `}<inlineCode parentName=\"p\">{`<FeedbackDialog>`}</inlineCode>{` component is a non-modal dialog that allows your users to\nprovide low-friction, anonymous feedback for a specific page.`}</p>\n    </PageDescription>\n    <h2>{`Activating the dialog`}</h2>\n    <p>{`The Feedback button only becomes visible once you’ve supplied an `}<inlineCode parentName=\"p\">{`onSubmit`}</inlineCode>{`\nhandler. To do that, we’ll need to shadow the `}<inlineCode parentName=\"p\">{`FeedbackDialog`}</inlineCode>{` component.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create a new javascript file under\n`}<inlineCode parentName=\"p\">{`src/gatsby-theme-carbon/components/FeedbackDialog/FeedbackDialog.js`}</inlineCode>{`.\nMatching the filepath exactly is important here.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Copy the following snippet into your new file`}</p>\n      </li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import React from 'react';\nimport ThemeFeedbackDialog from 'gatsby-theme-carbon/src/components/FeedbackDialog/FeedbackDialog';\n\nconst FeedbackDialog = ({ props }) => {\n  const onSubmit = (data) => {\n    console.log({ ...data });\n  };\n\n  return <ThemeFeedbackDialog {...props} onSubmit={onSubmit} />;\n};\n\nexport default FeedbackDialog;\n`}</code></pre>\n    <h2>{`Creating a handler`}</h2>\n    <p>{`Next, you’ll need a place to send the data. For the Carbon website, we use a\nserverless function that forwards the data to a\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.surveygizmo.com/\"\n      }}>{`SurveyGizmo`}</a>{` quiz. You can see that function\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/carbon-design-system/carbon-website/blob/master/api/survey.ts\"\n      }}>{`here`}</a>{`.`}</p>\n    <p>{`The handler can send a fetch request off to the endpoint you create. Update the\n`}<inlineCode parentName=\"p\">{`onSubmit`}</inlineCode>{` handler to send the data wherever you want. This function receives\nthe following arguments:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`experience`}</inlineCode>{`: “Negative”, “Positive” or “Neutral”`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`comment`}</inlineCode>{`: An optional comment`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`path`}</inlineCode>{`: the window location when the survey was submitted`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const FeedbackDialog = ({ props }) => {\n  const onSubmit = data => {\n    fetch(process.env.API_ENDPOINT, {\n      method: 'POST',\n      body: JSON.stringify(data),\n  });\n\n  return <ThemeFeedbackDialog {...props} onSubmit={onSubmit} />;\n};\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}