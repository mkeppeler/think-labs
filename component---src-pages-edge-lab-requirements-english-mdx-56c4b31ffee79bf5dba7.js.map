{"version":3,"sources":["webpack:///../instana-lab/src/pages/edge-lab/requirements/english.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","AnchorLinks","AnchorLink","DoDontRow","DoDont","InlineNotification","Accordion","AccordionItem","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","small","aspectRatio","captionTitle","colMd","colLg","type","kind","parentName","title","isMDXComponent"],"mappings":"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","file":"component---src-pages-edge-lab-requirements-english-mdx-56c4b31ffee79bf5dba7.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mkeppel/Documents/GitHub/instana-lab/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst DoDontRow = makeShortcode(\"DoDontRow\");\nconst DoDont = makeShortcode(\"DoDont\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst Accordion = makeShortcode(\"Accordion\");\nconst AccordionItem = makeShortcode(\"AccordionItem\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`This section covers the pre-requisties for the lab.`}</p>\n    </PageDescription>\n    <AnchorLinks small mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Devices</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Supported architectures and operating systems</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Install Operating System</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Docker</AnchorLink>\n    </AnchorLinks>\n    <h2>{`Devices`}</h2>\n    <DoDontRow mdxType=\"DoDontRow\">\n      <DoDont aspectRatio=\"1:1\" captionTitle=\"Raspberry PI 4\" colMd={2} colLg={2} mdxType=\"DoDont\">\n        <img {...{\n          \"src\": \"../images/raspberry-pi4.webp\",\n          \"alt\": \"Alt text\"\n        }}></img>\n      </DoDont>\n      <DoDont aspectRatio=\"1:1\" captionTitle=\"Raspberry PI 3A+\" colMd={2} colLg={2} mdxType=\"DoDont\">\n        <img {...{\n          \"src\": \"../images/raspberry-pi3.webp\",\n          \"alt\": \"Alt text\"\n        }}></img>\n      </DoDont>\n      <DoDont aspectRatio=\"1:1\" captionTitle=\"Raspberry PI 3B/3B+\" colMd={2} colLg={2} mdxType=\"DoDont\">\n        <img {...{\n          \"src\": \"../images/raspberry-pi3B.webp\",\n          \"alt\": \"Alt text\"\n        }}></img>\n      </DoDont>\n      <DoDont aspectRatio=\"1:1\" captionTitle=\"NVIDIA PI 2B\" colMd={2} colLg={2} mdxType=\"DoDont\">\n        <img {...{\n          \"src\": \"../images/raspberry-pi2B.webp\",\n          \"alt\": \"Alt text\"\n        }}></img>\n      </DoDont>\n    </DoDontRow>\n    <DoDontRow mdxType=\"DoDontRow\">\n      <DoDont aspectRatio=\"1:1\" captionTitle=\"Raspberry PI A+\" colMd={2} colLg={2} mdxType=\"DoDont\">\n        <img {...{\n          \"src\": \"../images/raspberry-pi1A.webp\",\n          \"alt\": \"Alt text\"\n        }}></img>\n      </DoDont>\n      <DoDont aspectRatio=\"1:1\" captionTitle=\"Raspberry PI B+\" colMd={2} colLg={2} mdxType=\"DoDont\">\n        <img {...{\n          \"src\": \"../images/raspberry-pi1B.webp\",\n          \"alt\": \"Alt text\"\n        }}></img>\n      </DoDont>\n      <DoDont aspectRatio=\"1:1\" captionTitle=\"Raspberry PI Zero-W/WH\" colMd={2} colLg={2} mdxType=\"DoDont\">\n        <img {...{\n          \"src\": \"../images/raspberry-pi-zero.webp\",\n          \"alt\": \"Alt text\"\n        }}></img>\n      </DoDont>\n      <DoDont aspectRatio=\"1:1\" captionTitle=\"NVIDIA Jetson\" colMd={2} colLg={2} mdxType=\"DoDont\">\n        <img {...{\n          \"src\": \"../images/nvidia-jetson.webp\",\n          \"alt\": \"Alt text\"\n        }}></img>\n      </DoDont>\n    </DoDontRow>\n    <DoDontRow mdxType=\"DoDontRow\">\n      <DoDont aspectRatio=\"1:1\" type=\"dont\" captionTitle=\"Raspberry PI Pico\" colMd={2} colLg={2} mdxType=\"DoDont\">\n        <img {...{\n          \"src\": \"../images/raspberry-pi-pico.webp\",\n          \"alt\": \"Alt text\"\n        }}></img>\n      </DoDont>\n    </DoDontRow>\n    <InlineNotification kind=\"info\" mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Info:`}</strong>{` If you do not hat a supported device at hand, please contact one of the instructors who will provide you with a virtual device for the lab.`}</p>\n    </InlineNotification>\n    <h2>{`Supported architectures and operating systems`}</h2>\n    <p>{`IBM Edge Application Manager supports the following operating systems running on your raspberry`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Linux on ARM (32-bit), for example Raspberry Pi, running Raspbian buster or stretch`}</li>\n      <li parentName=\"ul\">{`Linux on ARM (64-bit), for example NVIDIA Jetson Nano, TX1, or TX2, running Ubuntu 18.x (bionic)`}</li>\n    </ul>\n    <p>{`MicroSD flash card (32 GB preferred)`}</p>\n    <h2>{`Install Operating System`}</h2>\n    <p>{`If you do not have a supported OS on your device, the easiest way to install and configure the OS for the raspberry is to use `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.raspberrypi.org/software/\"\n      }}>{`Raspberry Pi Imager`}</a></p>\n    <p>{`1) Start the Raspberry PI Imager\n`}<img parentName=\"p\" {...{\n        \"src\": \"../images/raspberry-pi-imager.png\",\n        \"alt\": \"Raspberry PI Imager\"\n      }}></img></p>\n    <p>{`2) Choose the OS of your choice (Raspberry PI OS Lite 32-Bit recommented)`}</p>\n    <p>{`3) Choose the MicroSD`}</p>\n    <p>{`4) Press CTRL-Shift-X to enter advanced settings`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Set your hostname`}</li>\n      <li parentName=\"ul\">{`Enable SSH`}</li>\n      <li parentName=\"ul\">{`Configure WiFi`}</li>\n      <li parentName=\"ul\">{`Set locale settings\n`}<img parentName=\"li\" {...{\n          \"src\": \"../images/imager-advanced.png\",\n          \"alt\": \"Advanced Settings\"\n        }}></img></li>\n    </ul>\n    <p>{`5) Write the OS to the MicroSD card`}</p>\n    <p>{`6) Eject the MicroSD card and put it into your device`}</p>\n    <p>{`7) Boot your device`}</p>\n    <p>{`For the jetson device follow  the `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.nvidia.com/embedded/learn/get-started-jetson-nano-devkit#intro\"\n      }}>{`Getting Started with Jetson Nano Developer Kit`}</a></p>\n    <h2>{`Docker`}</h2>\n    <p>{`IBM Edge Application Manager requires a recent version of Docker on your device.\nIf not already done, follow the instructions to `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.docker.com/engine/install/debian/\"\n      }}>{`Install Docker`}</a></p>\n    <p>{`A more easy way to install docker, run the following script`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`curl -sSL https://get.docker.com | sh\n`}</code></pre>\n    <p>{`To run docker commands as non-root execute`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`sudo usermod -aG docker pi\n`}</code></pre>\n    <p>{`don’t forget to logoff/login to make the changes effective.`}</p>\n    <h3>{`If you are using the provided RHEL 7 VM please install docker through the following commands as root`}</h3>\n    <p>{`We have docker preinstalled for you`}</p>\n    <Accordion mdxType=\"Accordion\">\n  <AccordionItem title=\"docker install done for you\" mdxType=\"AccordionItem\">\n        <p>{`Switch to root`}</p>\n        <pre><code parentName=\"pre\" {...{}}>{`su root\nusermod -aG wheel ibmuser\n`}</code></pre>\n        <p>{`Install docker`}</p>\n        <pre><code parentName=\"pre\" {...{}}>{`sudo yum install -y yum-utils\nsudo yum-config-manager \\\\\n     --add-repo \\\\\n     https://download.docker.com/linux/centos/docker-ce.repo\nsudo yum install docker-ce docker-ce-cli containerd.io\nsudo usermod -aG docker ibmuser\nsudo systemctl start docker\nsudo chkconfig docker on\nexit\n`}</code></pre>\n  </AccordionItem>\n    </Accordion>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}