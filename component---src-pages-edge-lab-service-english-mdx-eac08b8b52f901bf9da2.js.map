{"version":3,"sources":["webpack:///../instana-lab/src/pages/edge-lab/service/english.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","Accordion","AccordionItem","Tabs","Tab","InlineNotification","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","title","label","kind","isMDXComponent"],"mappings":"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","file":"component---src-pages-edge-lab-service-english-mdx-eac08b8b52f901bf9da2.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mkeppel/Documents/GitHub/instana-lab/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst Accordion = makeShortcode(\"Accordion\");\nconst AccordionItem = makeShortcode(\"AccordionItem\");\nconst Tabs = makeShortcode(\"Tabs\");\nconst Tab = makeShortcode(\"Tab\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`In this section you will create/develop a sample service, which you will publish to the IBM Edge Application Manager and deploy in a later step.`}</p>\n    </PageDescription>\n    <h2>{`Creating Your Own Hello World Edge Service`}</h2>\n    <p>{`Follow the steps on this page to create your first simple Horizon edge service.\nPreconditions for developing your own service`}</p>\n    <ol>\n      <li parentName=\"ol\">{`If you have not already done so, complete the steps in these sections:`}</li>\n    </ol>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/think-labs/edge-lab/requirements/english\"\n        }}>{`Requirements`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/think-labs/edge-lab/connect/english\"\n        }}>{`Connect your Device`}</a></li>\n    </ul>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`If you are using macOS as your development host, configure Docker to store credentials in ~/.docker:`}</li>\n    </ol>\n    <ul>\n      <li parentName=\"ul\">{`Open the Docker Preferences dialog`}</li>\n      <li parentName=\"ul\">{`Uncheck Securely store Docker logins in macOS keychain`}</li>\n    </ul>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`If you do not already have a docker ID, obtain one at `}<a parentName=\"li\" {...{\n          \"href\": \"https://hub.docker.com/\"\n        }}>{`hub.docker.com`}</a>{` . Log in to Docker Hub using your Docker Hub ID:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`export DOCKER_HUB_ID=\"<dockerhubid>\"\necho \"<dockerhubpassword>\" | docker login -u $DOCKER_HUB_ID --password-stdin\n`}</code></pre>\n    <p>{`Output example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`WARNING! Your password will be stored unencrypted in /home/pi/.docker/config.json.\nConfigure a credential helper to remove this warning. See\nhttps://docs.docker.com/engine/reference/commandline/login/#credentials-store\n\nLogin Succeeded\n`}</code></pre>\n    <ol {...{\n      \"start\": 4\n    }}>\n      <li parentName=\"ol\">{`Create a cryptographic signing key pair. This enables you to sign services when publishing them to the exchange. This step only needs to be done once.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`hzn key create \"<x509-org>\" \"<x509-cn>\"\n`}</code></pre>\n    <p>{`where `}{`<`}{`x509-org`}{`>`}{` is your company name, and `}{`<`}{`x509-cn`}{`>`}{` is typically set to your email address.`}</p>\n    <Accordion mdxType=\"Accordion\">\n  <AccordionItem title=\"hzn key create output\" mdxType=\"AccordionItem\">\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`$ hzn key create \"<x509-org>\" \"<x509-cn>\"\nCreating RSA PSS private and public keys, and an x509 certificate for distribution. This is a CPU-intensive operation and, depending on key length and platform, may take a while. Key generation on an amd64 or ppc64 system using the default key length will complete in less than 1 minute.\nCreated keys:\n    /root/.hzn/keys/service.private.key\n    /root/.hzn/keys/service.public.pem\n`}</code></pre>\n  </AccordionItem>\n    </Accordion>\n    <ol {...{\n      \"start\": 5\n    }}>\n      <li parentName=\"ol\">{`Install git and jq:`}</li>\n    </ol>\n    <Tabs mdxType=\"Tabs\">\n      <Tab label=\"RHEL\" mdxType=\"Tab\">\n        <pre><code parentName=\"pre\" {...{}}>{`sudo yum install -y git jq\n`}</code></pre>\n      </Tab>\n      <Tab label=\"Raspian/Ubuntu\" mdxType=\"Tab\">\n        <pre><code parentName=\"pre\" {...{}}>{`sudo apt install -y git jq\n`}</code></pre>\n      </Tab>\n      <Tab label=\"macOS\" mdxType=\"Tab\">\n        <pre><code parentName=\"pre\" {...{}}>{`brew install git jq\n`}</code></pre>\n      </Tab>\n    </Tabs>\n    <h2>{`Building and Publishing the edge service`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`cd to the directory in which you want to create your new service and then run this command to create the files for a simple edge service and associated Horizon metadata files:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`export USER_ID=$DOCKER_HUB_ID\nexport HZN_ORG_ID=<your-org>\nhzn dev service new -s hello-$USER_ID -i \"$DOCKER_HUB_ID/hello-$USER_ID\"\n`}</code></pre>\n    <Accordion mdxType=\"Accordion\">\n  <AccordionItem title=\"file created\" mdxType=\"AccordionItem\">\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`.\n├── Dockerfile.amd64\n├── Dockerfile.arm\n├── Dockerfile.arm64\n├── horizon\n│   ├── dependencies\n│   ├── hzn.json\n│   ├── pattern-all-arches.json\n│   ├── pattern.json\n│   ├── service.definition.json\n│   ├── service.policy.json\n│   └── userinput.json\n├── Makefile\n└── service.sh\n`}</code></pre>\n  </AccordionItem>\n    </Accordion>\n    <InlineNotification kind=\"info\" mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Notice`}</strong>{` that some project variables are defined in horizon/hzn.json and referenced in other files, for example horizon/service.definition.json.`}</p>\n    </InlineNotification>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Edit service.sh and change something simple, for example change “Hello” to “Hey there”`}</li>\n    </ol>\n    <InlineNotification kind=\"info\" mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Note:`}</strong>{` This service is a shell script for brevity, but you can write your service in any language.`}</p>\n    </InlineNotification>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`Build the service docker image:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`make\n`}</code></pre>\n    <ol {...{\n      \"start\": 4\n    }}>\n      <li parentName=\"ol\">{`Test the service by running it the simulated agent environment:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`sudo hzn dev service start -S\n`}</code></pre>\n    <ol {...{\n      \"start\": 5\n    }}>\n      <li parentName=\"ol\">{`Check that the container is running:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`sudo docker ps\n`}</code></pre>\n    <ol {...{\n      \"start\": 6\n    }}>\n      <li parentName=\"ol\">{`Display the environment variables Horizon passes into your service container:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`sudo docker inspect $(sudo docker ps -q --filter name=hello-$USER_ID) | jq '.[0].Config.Env'\n`}</code></pre>\n    <ol {...{\n      \"start\": 7\n    }}>\n      <li parentName=\"ol\">{`See your helloworld service output:`}</li>\n    </ol>\n    <Tabs mdxType=\"Tabs\">\n      <Tab label=\"RHEL\" mdxType=\"Tab\">\n        <pre><code parentName=\"pre\" {...{}}>{`sudo tail -f /var/log/messages | grep hello-$USER_ID\n`}</code></pre>\n      </Tab>\n      <Tab label=\"Raspian/Ubuntu\" mdxType=\"Tab\">\n        <pre><code parentName=\"pre\" {...{}}>{`sudo tail -f /var/log/syslog | grep hello-$USER_ID\n`}</code></pre>\n      </Tab>\n      <Tab label=\"macOS\" mdxType=\"Tab\">\n        <pre><code parentName=\"pre\" {...{}}>{`sudo docker logs -f $(sudo docker ps -q --filter name=hello-$USER_ID\n# Press Ctrl-c to stop the output display\n`}</code></pre>\n      </Tab>\n    </Tabs>\n    <ol {...{\n      \"start\": 8\n    }}>\n      <li parentName=\"ol\">{`Stop the service:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`sudo hzn dev service stop\n`}</code></pre>\n    <ol {...{\n      \"start\": 9\n    }}>\n      <li parentName=\"ol\">{`Instruct Horizon to push your docker image to your registry and publish your service in the Horizon Exchange:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`hzn exchange service publish -f horizon/service.definition.json\nhzn exchange service list\n`}</code></pre>\n    <p>{`If you switch to the IBM Edge Application Manager UI, you should find your service on the `}<strong parentName=\"p\">{`Services`}</strong>{` tab\n`}<img parentName=\"p\" {...{\n        \"src\": \"../images/IEAM-services.png\",\n        \"alt\": \"IEAM-services\"\n      }}></img></p>\n    <p>{`Click on the service to get the details\n`}<img parentName=\"p\" {...{\n        \"src\": \"../images/IEAM-service-details.png\",\n        \"alt\": \"IEAM-service-details\"\n      }}></img></p>\n    <p>{`You can now proceed and deploy the service in the next part of the lab.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}