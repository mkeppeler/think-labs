{"componentChunkName":"component---src-pages-edge-lab-service-english-mdx","path":"/edge-lab/service/english/","result":{"pageContext":{"frontmatter":{"title":"Create an Edge Service","description":"None","tabs":["English","Deutsch","Espanol"]},"relativePagePath":"/edge-lab/service/english.mdx","titleType":"append","MdxNode":{"id":"ee66f7b9-9df0-5642-9466-71c4e89cb054","children":[],"parent":"ee9db261-99bb-5d75-b068-4e9e036e89a8","internal":{"content":"---\ntitle: Create an Edge Service\ndescription: None\ntabs: ['English', 'Deutsch', 'Espanol']\n---\n\n<PageDescription>\n\nIn this section you will create/develop a sample service, which you will publish to the IBM Edge Application Manager and deploy in a later step.\n\n</PageDescription>\n\n## Creating Your Own Hello World Edge Service\n\nFollow the steps on this page to create your first simple Horizon edge service.\nPreconditions for developing your own service\n1. If you have not already done so, complete the steps in these sections:\n  * [Requirements](/edge-lab/requirements/english)\n  * [Connect your Device](/edge-lab/connect/english)\n\n2. If you are using macOS as your development host, configure Docker to store credentials in ~/.docker:\n  * Open the Docker Preferences dialog\n  * Uncheck Securely store Docker logins in macOS keychain\n\n3. If you do not already have a docker ID, obtain one at [hub.docker.com](https://hub.docker.com/) . Log in to Docker Hub using your Docker Hub ID:\n\n```\nexport DOCKER_HUB_ID=\"<dockerhubid>\"\necho \"<dockerhubpassword>\" | docker login -u $DOCKER_HUB_ID --password-stdin\n```\n\nOutput example:\n```\nWARNING! Your password will be stored unencrypted in /home/pi/.docker/config.json.\nConfigure a credential helper to remove this warning. See\nhttps://docs.docker.com/engine/reference/commandline/login/#credentials-store\n\nLogin Succeeded\n```\n\n4. Create a cryptographic signing key pair. This enables you to sign services when publishing them to the exchange. This step only needs to be done once.\n\n```\nhzn key create \"<x509-org>\" \"<x509-cn>\"\n```\nwhere &lt;x509-org&gt; is your company name, and &lt;x509-cn&gt; is typically set to your email address.\n\n<Accordion>\n  <AccordionItem title=\"hzn key create output\">\n\n```bash\n$ hzn key create \"<x509-org>\" \"<x509-cn>\"\nCreating RSA PSS private and public keys, and an x509 certificate for distribution. This is a CPU-intensive operation and, depending on key length and platform, may take a while. Key generation on an amd64 or ppc64 system using the default key length will complete in less than 1 minute.\nCreated keys:\n \t/root/.hzn/keys/service.private.key\n\t/root/.hzn/keys/service.public.pem\n```\n\n  </AccordionItem>\n</Accordion>\n\n5. Install git and jq:\n\n<Tabs>\n\n<Tab label=\"RHEL\">\n\n```\nsudo yum install -y git jq\n```\n\n</Tab>\n\n<Tab label=\"Raspian/Ubuntu\">\n\n```\nsudo apt install -y git jq\n```\n\n</Tab>\n\n<Tab label=\"macOS\">\n\n```\nbrew install git jq\n```\n\n</Tab>\n\n</Tabs>\n\n## Building and Publishing the edge service\n\n1. cd to the directory in which you want to create your new service and then run this command to create the files for a simple edge service and associated Horizon metadata files:\n```\nexport USER_ID=$DOCKER_HUB_ID\nexport HZN_ORG_ID=<your-org>\nhzn dev service new -s hello-$USER_ID -i \"$DOCKER_HUB_ID/hello-$USER_ID\"\n```\n\n<Accordion>\n  <AccordionItem title=\"file created\">\n\n```bash\n.\n├── Dockerfile.amd64\n├── Dockerfile.arm\n├── Dockerfile.arm64\n├── horizon\n│   ├── dependencies\n│   ├── hzn.json\n│   ├── pattern-all-arches.json\n│   ├── pattern.json\n│   ├── service.definition.json\n│   ├── service.policy.json\n│   └── userinput.json\n├── Makefile\n└── service.sh\n```\n\n  </AccordionItem>\n</Accordion>\n\n<InlineNotification kind=\"info\">\n\n**Notice** that some project variables are defined in horizon/hzn.json and referenced in other files, for example horizon/service.definition.json.\n\n</InlineNotification>\n\n2. Edit service.sh and change something simple, for example change \"Hello\" to \"Hey there\"\n\n<InlineNotification kind=\"info\">\n\n**Note:** This service is a shell script for brevity, but you can write your service in any language.\n\n</InlineNotification>\n\n3. Build the service docker image:\n```\nmake\n```\n\n4. Test the service by running it the simulated agent environment:\n```\nsudo hzn dev service start -S\n```\n\n5. Check that the container is running:\n```\nsudo docker ps\n```\n\n6. Display the environment variables Horizon passes into your service container:\n```\nsudo docker inspect $(sudo docker ps -q --filter name=hello-$USER_ID) | jq '.[0].Config.Env'\n```\n\n7. See your helloworld service output:\n\n<Tabs>\n\n<Tab label=\"RHEL\">\n\n```\nsudo tail -f /var/log/messages | grep hello-$USER_ID\n```\n\n</Tab>\n\n<Tab label=\"Raspian/Ubuntu\">\n\n```\nsudo tail -f /var/log/syslog | grep hello-$USER_ID\n```\n\n</Tab>\n\n<Tab label=\"macOS\">\n\n```\nsudo docker logs -f $(sudo docker ps -q --filter name=hello-$USER_ID\n# Press Ctrl-c to stop the output display\n```\n\n</Tab>\n\n</Tabs>\n\n8. Stop the service:\n```\nsudo hzn dev service stop\n```\n\n9. Instruct Horizon to push your docker image to your registry and publish your service in the Horizon Exchange:\n```\nhzn exchange service publish -f horizon/service.definition.json\nhzn exchange service list\n```\n\nIf you switch to the IBM Edge Application Manager UI, you should find your service on the **Services** tab\n![IEAM-services](../images/IEAM-services.png)\n\nClick on the service to get the details\n![IEAM-service-details](../images/IEAM-service-details.png)\n\nYou can now proceed and deploy the service in the next part of the lab.","type":"Mdx","contentDigest":"c9d98e45579b3173eaa26d55d02e558c","owner":"gatsby-plugin-mdx","counter":399},"frontmatter":{"title":"Create an Edge Service","description":"None","tabs":["English","Deutsch","Espanol"]},"exports":{},"rawBody":"---\ntitle: Create an Edge Service\ndescription: None\ntabs: ['English', 'Deutsch', 'Espanol']\n---\n\n<PageDescription>\n\nIn this section you will create/develop a sample service, which you will publish to the IBM Edge Application Manager and deploy in a later step.\n\n</PageDescription>\n\n## Creating Your Own Hello World Edge Service\n\nFollow the steps on this page to create your first simple Horizon edge service.\nPreconditions for developing your own service\n1. If you have not already done so, complete the steps in these sections:\n  * [Requirements](/edge-lab/requirements/english)\n  * [Connect your Device](/edge-lab/connect/english)\n\n2. If you are using macOS as your development host, configure Docker to store credentials in ~/.docker:\n  * Open the Docker Preferences dialog\n  * Uncheck Securely store Docker logins in macOS keychain\n\n3. If you do not already have a docker ID, obtain one at [hub.docker.com](https://hub.docker.com/) . Log in to Docker Hub using your Docker Hub ID:\n\n```\nexport DOCKER_HUB_ID=\"<dockerhubid>\"\necho \"<dockerhubpassword>\" | docker login -u $DOCKER_HUB_ID --password-stdin\n```\n\nOutput example:\n```\nWARNING! Your password will be stored unencrypted in /home/pi/.docker/config.json.\nConfigure a credential helper to remove this warning. See\nhttps://docs.docker.com/engine/reference/commandline/login/#credentials-store\n\nLogin Succeeded\n```\n\n4. Create a cryptographic signing key pair. This enables you to sign services when publishing them to the exchange. This step only needs to be done once.\n\n```\nhzn key create \"<x509-org>\" \"<x509-cn>\"\n```\nwhere &lt;x509-org&gt; is your company name, and &lt;x509-cn&gt; is typically set to your email address.\n\n<Accordion>\n  <AccordionItem title=\"hzn key create output\">\n\n```bash\n$ hzn key create \"<x509-org>\" \"<x509-cn>\"\nCreating RSA PSS private and public keys, and an x509 certificate for distribution. This is a CPU-intensive operation and, depending on key length and platform, may take a while. Key generation on an amd64 or ppc64 system using the default key length will complete in less than 1 minute.\nCreated keys:\n \t/root/.hzn/keys/service.private.key\n\t/root/.hzn/keys/service.public.pem\n```\n\n  </AccordionItem>\n</Accordion>\n\n5. Install git and jq:\n\n<Tabs>\n\n<Tab label=\"RHEL\">\n\n```\nsudo yum install -y git jq\n```\n\n</Tab>\n\n<Tab label=\"Raspian/Ubuntu\">\n\n```\nsudo apt install -y git jq\n```\n\n</Tab>\n\n<Tab label=\"macOS\">\n\n```\nbrew install git jq\n```\n\n</Tab>\n\n</Tabs>\n\n## Building and Publishing the edge service\n\n1. cd to the directory in which you want to create your new service and then run this command to create the files for a simple edge service and associated Horizon metadata files:\n```\nexport USER_ID=$DOCKER_HUB_ID\nexport HZN_ORG_ID=<your-org>\nhzn dev service new -s hello-$USER_ID -i \"$DOCKER_HUB_ID/hello-$USER_ID\"\n```\n\n<Accordion>\n  <AccordionItem title=\"file created\">\n\n```bash\n.\n├── Dockerfile.amd64\n├── Dockerfile.arm\n├── Dockerfile.arm64\n├── horizon\n│   ├── dependencies\n│   ├── hzn.json\n│   ├── pattern-all-arches.json\n│   ├── pattern.json\n│   ├── service.definition.json\n│   ├── service.policy.json\n│   └── userinput.json\n├── Makefile\n└── service.sh\n```\n\n  </AccordionItem>\n</Accordion>\n\n<InlineNotification kind=\"info\">\n\n**Notice** that some project variables are defined in horizon/hzn.json and referenced in other files, for example horizon/service.definition.json.\n\n</InlineNotification>\n\n2. Edit service.sh and change something simple, for example change \"Hello\" to \"Hey there\"\n\n<InlineNotification kind=\"info\">\n\n**Note:** This service is a shell script for brevity, but you can write your service in any language.\n\n</InlineNotification>\n\n3. Build the service docker image:\n```\nmake\n```\n\n4. Test the service by running it the simulated agent environment:\n```\nsudo hzn dev service start -S\n```\n\n5. Check that the container is running:\n```\nsudo docker ps\n```\n\n6. Display the environment variables Horizon passes into your service container:\n```\nsudo docker inspect $(sudo docker ps -q --filter name=hello-$USER_ID) | jq '.[0].Config.Env'\n```\n\n7. See your helloworld service output:\n\n<Tabs>\n\n<Tab label=\"RHEL\">\n\n```\nsudo tail -f /var/log/messages | grep hello-$USER_ID\n```\n\n</Tab>\n\n<Tab label=\"Raspian/Ubuntu\">\n\n```\nsudo tail -f /var/log/syslog | grep hello-$USER_ID\n```\n\n</Tab>\n\n<Tab label=\"macOS\">\n\n```\nsudo docker logs -f $(sudo docker ps -q --filter name=hello-$USER_ID\n# Press Ctrl-c to stop the output display\n```\n\n</Tab>\n\n</Tabs>\n\n8. Stop the service:\n```\nsudo hzn dev service stop\n```\n\n9. Instruct Horizon to push your docker image to your registry and publish your service in the Horizon Exchange:\n```\nhzn exchange service publish -f horizon/service.definition.json\nhzn exchange service list\n```\n\nIf you switch to the IBM Edge Application Manager UI, you should find your service on the **Services** tab\n![IEAM-services](../images/IEAM-services.png)\n\nClick on the service to get the details\n![IEAM-service-details](../images/IEAM-service-details.png)\n\nYou can now proceed and deploy the service in the next part of the lab.","fileAbsolutePath":"/Users/mkeppel/Documents/GitHub/think-labs/src/pages/edge-lab/service/english.mdx"}}},"staticQueryHashes":["1054721580","1054721580","1364590287","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","768070550"]}