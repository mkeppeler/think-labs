{"componentChunkName":"component---src-pages-edge-lab-service-deutsch-mdx","path":"/edge-lab/service/deutsch/","result":{"pageContext":{"frontmatter":{"title":"Erstellen eines Edge Dienstes","description":"None","tabs":["English","Deutsch","Espanol"]},"relativePagePath":"/edge-lab/service/deutsch.mdx","titleType":"append","MdxNode":{"id":"38a24b00-881b-5347-a283-e66527749ad3","children":[],"parent":"31c3df15-bda8-5791-956f-9aefc414d584","internal":{"content":"---\ntitle: Erstellen eines Edge Dienstes\ndescription: None\ntabs: ['English', 'Deutsch', 'Espanol']\n---\n\n<PageDescription>\n\nIn diesem Abschnitt werden Sie einen Beispieldienst erstellen/entwickeln, den Sieim IBM Edge Application Manager veröffentlichen und in einem späteren Schritt bereitstellen werden.\n\n</PageDescription>\n\n## Erstellen Ihres eigenen Hello World Edge Service\n\nFolgen Sie den Schritten auf dieser Seite, um Ihren ersten einfachen Horizon-Edge-Service zu erstellen. Voraussetzungen für die Entwicklung eines eigenen Dienstes\n1. Wenn Sie dies noch nicht getan haben, führen Sie die Schritte in diesen Abschnitten aus:\n  * Voraussetzungen für die Verwendung des Hello World-Beispiel-Edge-Service\n  * Verwendung des Hello World-Beispiel-Edge-Dienstes mit Bereitstellungsmustern\n\n2. Wenn Sie macOS als Entwicklungshost verwenden, konfigurieren Sie Docker so, dass Anmeldeinformationen in ~/.docker gespeichert werden:\n  * Öffnen Sie das Dialogfeld \"Docker Preferences\" (Docker-Voreinstellungen)\n  * Deaktivieren Sie das Kontrollkästchen Docker-Anmeldeinformationen sicher im macOS-Schlüsselbund speichern\n\n3. Wenn Sie noch keine Docker-ID haben, erhalten Sie eine unter [hub.docker.com](https://hub.docker.com/) . Melden Sie sich bei Docker Hub mit Ihrer Docker Hub-IDan:\n\n```\nexport DOCKER_HUB_ID=\"<dockerhubid>\"\necho \"<dockerhubpassword>\" | docker login -u $DOCKER_HUB_ID --password-stdin\n```\n\nBeispiel für die Ausgabe:\n```\nWARNING! Your password will be stored unencrypted in /home/pi/.docker/config.json.\nConfigure a credential helper to remove this warning. See\nhttps://docs.docker.com/engine/reference/commandline/login/#credentials-store\n\nLogin Succeeded\n```\n\n4. Erstellen Sie ein kryptografisches Signierschlüsselpaar. Damit können Sie Dienste signieren, wenn Sie sie in der Börse veröffentlichen. Dieser Schritt muss nur einmal durchgeführt werden.\n\n```\nhzn key create \"<x509-org>\" \"<x509-cn>\"\n```\nwobei &lt;x509-org&gt; Ihr Firmenname ist und &lt;x509-cn&gt; normalerweise auf Ihre E-Mail-Adresse eingestellt ist.\n\n5. Installieren Sie git und jq:\n\n<Tabs>\n\n<Tab label=\"RHEL\">\n\n```\nsudo yum install -y git jq\n```\n\n</Tab>\n\n<Tab label=\"Raspian/Ubuntu\">\n\n```\nsudo apt install -y git jq\n```\n\n</Tab>\n\n<Tab label=\"macOS\">\n\n```\nbrew install git jq\n```\n\n</Tab>\n\n</Tabs>\n\n## Erstellen und Veröffentlichen Ihres eigenen Hello World Beispiel Edge Dienstes\n\n1. cd in das Verzeichnis, in dem Sie Ihren neuen Dienst erstellen möchten, und führen Sie dann diesen Befehl aus, um die Dateien für einen einfachen Edge Dienst und die zugehörigen Horizon-Metadaten-Dateien zuerstellen:\n```\nexport USER_ID=<your-userID>\nhzn dev service new -s hello-$USER_ID -i \"$DOCKER_HUB_ID/hello-$USER_ID\"\n```\n\n<InlineNotification kind=\"info\">\n\n**Beachten** Sie, dass einige Projektvariablen in horizon/hzn.json definiert sind und in anderen Dateien referenziert werden, zum Beispiel horizon/service.definition.json.\n\n</InlineNotification>\n\n2. Bearbeiten Sie service.sh und ändern Sie etwas Einfaches, z. B. ändern Sie \"Hello\" in \"Hallo\".\n\n<InlineNotification kind=\"info\">\n\n**Hinweis:** Dieser Dienst ist der Einfachheit halber ein Shell-Skript, aber Sie könnenIhren Dienst in jeder beliebigen Sprache schreiben.\n\n</InlineNotification>\n\n3. Erstellen Sie das Docker-Image des Dienstes:\n```\nmake\n```\n\n4. Testen Sie den Dienst, indem Sie ihn in der simulierten Agentenumgebungausführen:\n```\nhzn dev service start -S\n```\n\n5. Prüfen Sie, ob der Container läuft:\n```\nsudo docker ps\n```\n\n6. Zeigen Sie die Umgebungsvariablen an, die Horizon in Ihren Service-Container übergibt:\n```\nsudo docker inspect $(sudo docker ps -q --filter name=hello-$USER_ID) | jq '.[0].Config.Env'\n```\n\n7. Zeigen Sie die Ausgabe Ihres helloworld-Dienstes an:\n\n<Tabs>\n\n<Tab label=\"RHEL\">\n\n```\nsudo tail -f /var/log/messages | grep hello-$USER_ID\n```\n\n</Tab>\n\n<Tab label=\"Raspian/Ubuntu\">\n\n```\nsudo tail -f /var/log/syslog | grep hello-$USER_ID\n```\n\n</Tab>\n\n<Tab label=\"macOS\">\n\n```\nsudo docker logs -f $(sudo docker ps -q --filter name=hello-$USER_ID\n```\n\n</Tab>\n\n</Tabs>\n\n8. Stoppen Sie den Dienst:\n```\nsudo hzn dev service stop\n```\n\n9. Weisen Sie Horizon an, Ihr Docker-Image in Ihre Registry zu pushen und Ihren Dienst in Horizon Exchange zu veröffentlichen:\n```\nhzn exchange service publish -f horizon/service.definition.json\nhzn exchange service list\n```\n\nWenn Sie zur IBM Edge Application Manager-Benutzeroberfläche wechseln, sollten Sie Ihren Dienst auf der Registerkarte **Services** finden\n![IEAM-services](../images/IEAM-services.png)\n\nKlicken Sie auf den Dienst, um die Details zu erhalten\n![IEAM-service-details](../images/IEAM-service-details.png)\n\nSie können nun fortfahren und den Dienst im nächsten Teil des Labs bereitstellen.","type":"Mdx","contentDigest":"e8a2ade32fe68e55351b52aa2a375e7e","owner":"gatsby-plugin-mdx","counter":403},"frontmatter":{"title":"Erstellen eines Edge Dienstes","description":"None","tabs":["English","Deutsch","Espanol"]},"exports":{},"rawBody":"---\ntitle: Erstellen eines Edge Dienstes\ndescription: None\ntabs: ['English', 'Deutsch', 'Espanol']\n---\n\n<PageDescription>\n\nIn diesem Abschnitt werden Sie einen Beispieldienst erstellen/entwickeln, den Sieim IBM Edge Application Manager veröffentlichen und in einem späteren Schritt bereitstellen werden.\n\n</PageDescription>\n\n## Erstellen Ihres eigenen Hello World Edge Service\n\nFolgen Sie den Schritten auf dieser Seite, um Ihren ersten einfachen Horizon-Edge-Service zu erstellen. Voraussetzungen für die Entwicklung eines eigenen Dienstes\n1. Wenn Sie dies noch nicht getan haben, führen Sie die Schritte in diesen Abschnitten aus:\n  * Voraussetzungen für die Verwendung des Hello World-Beispiel-Edge-Service\n  * Verwendung des Hello World-Beispiel-Edge-Dienstes mit Bereitstellungsmustern\n\n2. Wenn Sie macOS als Entwicklungshost verwenden, konfigurieren Sie Docker so, dass Anmeldeinformationen in ~/.docker gespeichert werden:\n  * Öffnen Sie das Dialogfeld \"Docker Preferences\" (Docker-Voreinstellungen)\n  * Deaktivieren Sie das Kontrollkästchen Docker-Anmeldeinformationen sicher im macOS-Schlüsselbund speichern\n\n3. Wenn Sie noch keine Docker-ID haben, erhalten Sie eine unter [hub.docker.com](https://hub.docker.com/) . Melden Sie sich bei Docker Hub mit Ihrer Docker Hub-IDan:\n\n```\nexport DOCKER_HUB_ID=\"<dockerhubid>\"\necho \"<dockerhubpassword>\" | docker login -u $DOCKER_HUB_ID --password-stdin\n```\n\nBeispiel für die Ausgabe:\n```\nWARNING! Your password will be stored unencrypted in /home/pi/.docker/config.json.\nConfigure a credential helper to remove this warning. See\nhttps://docs.docker.com/engine/reference/commandline/login/#credentials-store\n\nLogin Succeeded\n```\n\n4. Erstellen Sie ein kryptografisches Signierschlüsselpaar. Damit können Sie Dienste signieren, wenn Sie sie in der Börse veröffentlichen. Dieser Schritt muss nur einmal durchgeführt werden.\n\n```\nhzn key create \"<x509-org>\" \"<x509-cn>\"\n```\nwobei &lt;x509-org&gt; Ihr Firmenname ist und &lt;x509-cn&gt; normalerweise auf Ihre E-Mail-Adresse eingestellt ist.\n\n5. Installieren Sie git und jq:\n\n<Tabs>\n\n<Tab label=\"RHEL\">\n\n```\nsudo yum install -y git jq\n```\n\n</Tab>\n\n<Tab label=\"Raspian/Ubuntu\">\n\n```\nsudo apt install -y git jq\n```\n\n</Tab>\n\n<Tab label=\"macOS\">\n\n```\nbrew install git jq\n```\n\n</Tab>\n\n</Tabs>\n\n## Erstellen und Veröffentlichen Ihres eigenen Hello World Beispiel Edge Dienstes\n\n1. cd in das Verzeichnis, in dem Sie Ihren neuen Dienst erstellen möchten, und führen Sie dann diesen Befehl aus, um die Dateien für einen einfachen Edge Dienst und die zugehörigen Horizon-Metadaten-Dateien zuerstellen:\n```\nexport USER_ID=<your-userID>\nhzn dev service new -s hello-$USER_ID -i \"$DOCKER_HUB_ID/hello-$USER_ID\"\n```\n\n<InlineNotification kind=\"info\">\n\n**Beachten** Sie, dass einige Projektvariablen in horizon/hzn.json definiert sind und in anderen Dateien referenziert werden, zum Beispiel horizon/service.definition.json.\n\n</InlineNotification>\n\n2. Bearbeiten Sie service.sh und ändern Sie etwas Einfaches, z. B. ändern Sie \"Hello\" in \"Hallo\".\n\n<InlineNotification kind=\"info\">\n\n**Hinweis:** Dieser Dienst ist der Einfachheit halber ein Shell-Skript, aber Sie könnenIhren Dienst in jeder beliebigen Sprache schreiben.\n\n</InlineNotification>\n\n3. Erstellen Sie das Docker-Image des Dienstes:\n```\nmake\n```\n\n4. Testen Sie den Dienst, indem Sie ihn in der simulierten Agentenumgebungausführen:\n```\nhzn dev service start -S\n```\n\n5. Prüfen Sie, ob der Container läuft:\n```\nsudo docker ps\n```\n\n6. Zeigen Sie die Umgebungsvariablen an, die Horizon in Ihren Service-Container übergibt:\n```\nsudo docker inspect $(sudo docker ps -q --filter name=hello-$USER_ID) | jq '.[0].Config.Env'\n```\n\n7. Zeigen Sie die Ausgabe Ihres helloworld-Dienstes an:\n\n<Tabs>\n\n<Tab label=\"RHEL\">\n\n```\nsudo tail -f /var/log/messages | grep hello-$USER_ID\n```\n\n</Tab>\n\n<Tab label=\"Raspian/Ubuntu\">\n\n```\nsudo tail -f /var/log/syslog | grep hello-$USER_ID\n```\n\n</Tab>\n\n<Tab label=\"macOS\">\n\n```\nsudo docker logs -f $(sudo docker ps -q --filter name=hello-$USER_ID\n```\n\n</Tab>\n\n</Tabs>\n\n8. Stoppen Sie den Dienst:\n```\nsudo hzn dev service stop\n```\n\n9. Weisen Sie Horizon an, Ihr Docker-Image in Ihre Registry zu pushen und Ihren Dienst in Horizon Exchange zu veröffentlichen:\n```\nhzn exchange service publish -f horizon/service.definition.json\nhzn exchange service list\n```\n\nWenn Sie zur IBM Edge Application Manager-Benutzeroberfläche wechseln, sollten Sie Ihren Dienst auf der Registerkarte **Services** finden\n![IEAM-services](../images/IEAM-services.png)\n\nKlicken Sie auf den Dienst, um die Details zu erhalten\n![IEAM-service-details](../images/IEAM-service-details.png)\n\nSie können nun fortfahren und den Dienst im nächsten Teil des Labs bereitstellen.","fileAbsolutePath":"/Users/mkeppel/Documents/GitHub/think-labs/src/pages/edge-lab/service/deutsch.mdx"}}},"staticQueryHashes":["1054721580","1054721580","1364590287","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","768070550"]}