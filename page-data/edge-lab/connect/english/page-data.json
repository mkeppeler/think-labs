{"componentChunkName":"component---src-pages-edge-lab-connect-english-mdx","path":"/edge-lab/connect/english/","result":{"pageContext":{"frontmatter":{"title":"Connect your Device","tabs":["English","Deutsch","Espanol"],"description":"None"},"relativePagePath":"/edge-lab/connect/english.mdx","titleType":"append","MdxNode":{"id":"0730c292-fd36-5a62-9821-8b773a6e61b2","children":[],"parent":"86c3f205-5020-5aca-ba7e-da3031362ae2","internal":{"content":"---\ntitle: Connect your Device\ntabs: ['English', 'Deutsch', 'Espanol']\ndescription: None\n---\n\n<PageDescription>\n\nIn this section you will setup your target environment in which you will deploy the sample application and the edge agent.\nIf you want to bring your own environemt, feel free to do so.\n\n</PageDescription>\n\n## Agent Installation and Registration\n\nIn this lab we will use the automated agent installation and registration method. Other option are\n* Advanced manual agent installation and registration \n* Bulk agent installation and registration\n* Secure Device Onboarding (SDO) agent installation and registration\n\n<InlineNotification kind=\"info\">\n\n**Note:** These steps are the same for all edge device types (architectures).\n\n</InlineNotification>\n\nIf you have not already perpared your device with the steps in [Requirements](/edge-lab/requirements/english) section, do that now.\n\nThe IBM Edge Application Manager should not list any or your device as shown below\n![IEAM-nonode](../images/IEAM-nonode.png)\n\n1) Set the following environment variables on your device.\n```bash\nexport HZN_DEVICE_ID=<yourname>\nexport HZN_EXCHANGE_USER_AUTH=iamapikey:<api-key>\nexport HZN_ORG_ID=<your-exchange-organization>\nexport HZN_FSS_CSSURL=https://<ieam-management-hub-ingress>/edge-css/\nexport HZN_EXCHANGE_URL=https://<ieam-management-hub-ingress>/edge-exchange/v1\n```\n\n<InlineNotification kind=\"info\">\n\n**Note:** we have already prepared the environment to [setup edge nodes](https://www.ibm.com/docs/en/edge-computing/4.2?topic=installation-prepare-setting-up-edge-nodes), where we created the apikey and organisation for you.\n\n</InlineNotification>\n\n2) For the automated installation download the agent-install.sh script from the Cloud Sync Service (CSS) to your device and make it executable:\n```bash\ncurl -u \"$HZN_ORG_ID/$HZN_EXCHANGE_USER_AUTH\" -k -o agent-install.sh $HZN_FSS_CSSURL/api/v1/objects/IBM/agent_files/agent-install.sh/data\nchmod +x agent-install.sh\n```\n\n3) Run agent-install.sh to get the necessary files from CSS, install and configure the Horizon agent, and register your edge device to run the helloworld sample edge service:\n```bash\nsudo -s -E ./agent-install.sh -i 'css:' -p IBM/pattern-ibm.helloworld -w '*' -T 120\n```\n\n<InlineNotification kind=\"info\">\n\n**Note:** To see all available agent-install.sh flag descriptions run: `./agent-install.sh -h`\n\n</InlineNotification>\n\n<Accordion>\n  <AccordionItem title=\"agent-install output\">\n\nYou shoud see the following cli output for a successful installation. Depending on your device and connection this will take some time.\n\n```bash\n$ curl -u \"$HZN_ORG_ID/$HZN_EXCHANGE_USER_AUTH\" -k -o agent-install.sh $HZN_FSS_CSSURL/api/v1/objects/IBM/agent_files/agent-install.sh/data\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100  113k    0  113k    0     0  76924      0 --:--:--  0:00:01 --:--:-- 76924\n$ chmod +x agent-install.sh\n$ sudo -s -E ./agent-install.sh -i 'css:' -p IBM/pattern-ibm.helloworld -w '*' -T 120\n2021-04-27 12:12:57 AGENT_INSTALL_ZIP:  (from default value)\n2021-04-27 12:12:58 INPUT_FILE_PATH: css: (from command line flag)\n2021-04-27 12:12:58 INPUT_FILE_PATH adjusted to: css:/api/v1/objects/IBM/agent_files\n2021-04-27 12:12:58 AGENT_CFG_FILE:  (from default value)\n2021-04-27 12:12:58 AGENT_VERBOSITY: 3 (from environment variable)\n2021-04-27 12:12:58 HZN_ORG_ID: thinkedge (from environment variable)\n2021-04-27 12:12:58 HZN_MGMT_HUB_CERT_PATH:  (from default value)\n2021-04-27 12:12:58 AGENT_CERT_FILE: agent-install.crt (from default value)\n2021-04-27 12:12:58 HZN_FSS_CSSURL: https://cp-console.edge-lab-2172-think21-6a6ac8c3d7a0ea50590dce8fa3fd273c-0000.us-south.containers.appdomain.cloud/edge-css (from environment variable)\n2021-04-27 12:12:58 HZN_EXCHANGE_USER_AUTH: ****** (from environment variable)\n2021-04-27 12:12:58 HZN_EXCHANGE_NODE_AUTH:  (from default value)\n2021-04-27 12:12:58 Downloading file https://cp-console.edge-lab-2172-think21-6a6ac8c3d7a0ea50590dce8fa3fd273c-0000.us-south.containers.appdomain.cloud/edge-css/api/v1/objects/IBM/agent_files/agent-install.crt/data using --insecure ...\n2021-04-27 12:12:59 Downloading file https://cp-console.edge-lab-2172-think21-6a6ac8c3d7a0ea50590dce8fa3fd273c-0000.us-south.containers.appdomain.cloud/edge-css/api/v1/objects/IBM/agent_files/agent-install.cfg/data ...\n2021-04-27 12:13:00 AGENT_SKIP_REGISTRATION: false (from default value)\n2021-04-27 12:13:00 HZN_EXCHANGE_URL: https://cp-console.edge-lab-2172-think21-6a6ac8c3d7a0ea50590dce8fa3fd273c-0000.us-south.containers.appdomain.cloud/edge-exchange/v1 (from configuration file)\n2021-04-27 12:13:00 NODE_ID:  (from default value)\n2021-04-27 12:13:00 HZN_DEVICE_ID: my-pi (from environment variable)\n2021-04-27 12:13:00 HZN_NODE_ID:  (from default value)\n2021-04-27 12:13:00 HZN_EXCHANGE_PATTERN: IBM/pattern-ibm.helloworld (from command line flag)\n2021-04-27 12:13:00 HZN_NODE_POLICY:  (from default value)\n2021-04-27 12:13:00 AGENT_WAIT_FOR_SERVICE: * (from command line flag)\n2021-04-27 12:13:00 AGENT_WAIT_FOR_SERVICE_ORG:  (from default value)\n2021-04-27 12:13:00 AGENT_REGISTRATION_TIMEOUT: 120 (from command line flag)\n2021-04-27 12:13:00 AGENT_OVERWRITE: false (from default value)\n2021-04-27 12:13:00 AGENT_SKIP_PROMPT: false (from default value)\n2021-04-27 12:13:00 AGENT_INSTALL_ZIP: agent-install-files.tar.gz (from default value)\n2021-04-27 12:13:00 AGENT_DEPLOY_TYPE: device (from default value)\n2021-04-27 12:13:00 AGENT_WAIT_MAX_SECONDS: 30 (from default value)\n2021-04-27 12:13:01 NODE_ID_MAPPING_FILE: node-id-mapping.csv (from default value)\n2021-04-27 12:13:01 PKG_APT_KEY:  (from default value)\n2021-04-27 12:13:01 APT_REPO_BRANCH: updates (from default value)\n2021-04-27 12:13:01 AGENT_IMAGE_TAR_FILE: amd64_anax.tar.gz (from default value)\n2021-04-27 12:13:05 OS: linux, Distro: raspbian, Distro Release: 10, Distro Code Name: buster, Architecture: armhf\n2021-04-27 12:13:05 WARNING: Using node id from HZN_DEVICE_ID\n2021-04-27 12:13:05 Node type: device\n2021-04-27 12:13:05 Updating apt package index...\n2021-04-27 12:14:15 Installing prerequisites, this could take a minute...\n2021-04-27 12:16:17 Verifying that node my-pi in the exchange is type device (if it exists)...\n2021-04-27 12:16:18 Creating /etc/default/horizon ...\n2021-04-27 12:16:19 Downloading file https://cp-console.edge-lab-2172-think21-6a6ac8c3d7a0ea50590dce8fa3fd273c-0000.us-south.containers.appdomain.cloud/edge-css/api/v1/objects/IBM/agent_files/horizon-agent-linux-deb-armhf.tar.gz/data ...\n2021-04-27 12:16:42 Installing the horizon packages in /root/. ...\n2021-04-27 12:18:22 Waiting for state: Horizon agent ready \n2021-04-27 12:18:24 Done: Horizon agent ready\n2021-04-27 12:18:25 Registering the edge node...\nhzn register -m 'make-pi' -o 'thinkedge' -u 'iamapikey:I1qBL7mXekVo-jxJf_3M3th6xEWaPuuYvegbxBZthSoL' -n 'my-pi:' -s '*'  -t '120' -p 'IBM/pattern-ibm.helloworld'\nHorizon Exchange base URL: https://cp-console.edge-lab-2172-think21-6a6ac8c3d7a0ea50590dce8fa3fd273c-0000.us-south.containers.appdomain.cloud/edge-exchange/v1\nGenerated random node token\nNode thinkedge/my-pi does not exist in the Exchange with the specified token, creating/updating it...\nnode added or updated\nNode my-pi created.\nWill proceeed with the given pattern IBM/pattern-ibm.helloworld.\nInitializing the Horizon node with node type 'device'...\nNote: no input file was specified. This is only valid if none of the services need variables set.\nHowever, if there is 'userInput' specified in the node already in the Exchange, the userInput will be used.\nChanging Horizon state to configured to register this node with Horizon...\nHorizon node is registered. Workload services should begin executing shortly.\nWaiting for up to 120 seconds for following services to start:\n\tIBM/ibm.helloworld\nStatus of the services you are watching:\n\tIBM/ibm.helloworld \tWaiting: no agreements formed yet\nStatus of the services you are watching:\n\tIBM/ibm.helloworld \tWaiting: agreement is formed\nStatus of the services you are watching:\n\tIBM/ibm.helloworld \tWaiting: agreement is accepted\nStatus of the services you are watching:\n\tIBM/ibm.helloworld \tWaiting: service is created\nStatus of the services you are watching:\n\tIBM/ibm.helloworld \tWaiting: service is created\nStatus of the services you are watching:\n\tIBM/ibm.helloworld \tWaiting: service is created\nTimeout waiting for some services to successfully start. Analyzing possible reasons for the timeout...\n\nCurrently, there are no errors recorded in the node's event log.\nUsing the 'hzn deploycheck all -p' command to verify that node, service configuration and pattern is compatible.\nNeither node id nor node policy is specified. Getting node policy from the local node.\nNeither node id nor node user input file is specified. Getting node user input from the local node.\n{\n  \"compatible\": true,\n  \"reason\": {\n    \"IBM/ibm.helloworld_1.0.0_arm\": \"Compatible\"\n  }\n}\n\nAnalysis complete.\n\n```\n\n  </AccordionItem>\n</Accordion>\n\nIf you look at the IBM Edge Application Manager UI you will see that your device shows up in the Nodes tab. Finally it should be in the state **Active with services** the agent linstallation we have choose also deploys a sample service.\n![IEAM-nodes-chart](../images/IEAM-nodes-chart.png)\n\nYou can switch between the chart and list view\n![IEAM-nodes-list](../images/IEAM-nodes-list.png)\n\nSelect your device to get detailed information about your node\n![IEAM-node-details](../images/IEAM-node-details.png)\n\nTo view the helloworld sample edge service output which is installed as part of the agent-install run\n\n```bash\nhzn service log -f ibm.helloworld\n# Press Ctrl-c to stop the output display\n```\n\n<Accordion>\n  <AccordionItem title=\"service output\">\n\n```bash\n$ hzn service log -f ibm.helloworld\nDisplaying log messages for service ibm.helloworld with service id 593a50ceadeae6c83f74b63d2591cb87af962472a8c3e4cd18d007d14d78c00e.\nUse ctrl-C to terminate this command.\nApr 27 12:20:40 make-pi workload-593a50ceadeae6c83f74b63d2591cb87af962472a8c3e4cd18d007d14d78c00e_ibm.helloworld[1407]: my-pi says: Hello World!!\nApr 27 12:20:43 make-pi workload-593a50ceadeae6c83f74b63d2591cb87af962472a8c3e4cd18d007d14d78c00e_ibm.helloworld[1407]: my-pi says: Hello World!!\nApr 27 12:20:46 make-pi workload-593a50ceadeae6c83f74b63d2591cb87af962472a8c3e4cd18d007d14d78c00e_ibm.helloworld[1407]: my-pi says: Hello World!!\nApr 27 12:20:49 make-pi workload-593a50ceadeae6c83f74b63d2591cb87af962472a8c3e4cd18d007d14d78c00e_ibm.helloworld[1407]: my-pi says: Hello World!!\nApr 27 12:20:52 make-pi workload-593a50ceadeae6c83f74b63d2591cb87af962472a8c3e4cd18d007d14d78c00e_ibm.helloworld[1407]: my-pi says: Hello World!!\nApr 27 12:20:55 make-pi workload-593a50ceadeae6c83f74b63d2591cb87af962472a8c3e4cd18d007d14d78c00e_ibm.helloworld[1407]: my-pi says: Hello World!!\nApr 27 12:20:58 make-pi workload-593a50ceadeae6c83f74b63d2591cb87af962472a8c3e4cd18d007d14d78c00e_ibm.helloworld[1407]: my-pi says: Hello World!!\n```\n\n  </AccordionItem>\n</Accordion>\n\n\nIf the helloworld edge service does not start, run this command to see error messages:\n\n```bash\nhzn eventlog list -f\n# Press Ctrl-c to stop the output display\n```\n\n<Accordion>\n  <AccordionItem title=\"eventlog output\">\n\n```bash\n$ hzn eventlog list -f\n  \"2021-04-27 12:18:30:   Start node configuration/registration for node my-pi.\",\n  \"2021-04-27 12:18:36:   Start service auto configuration for IBM/ibm.helloworld.\",\n  \"2021-04-27 12:18:36:   Complete service auto configuration for IBM/ibm.helloworld.\",\n  \"2021-04-27 12:18:37:   Complete node configuration/registration for node my-pi.\",\n  \"2021-04-27 12:18:37:   Start policy advertising with the Exchange for service IBM/ibm.helloworld.\",\n  \"2021-04-27 12:18:38:   Complete policy advertising with the Exchange for service IBM/ibm.helloworld.\",\n  \"2021-04-27 12:19:42:   Node received Proposal message using agreement 593a50ceadeae6c83f74b63d2591cb87af962472a8c3e4cd18d007d14d78c00e for service IBM/ibm.helloworld from the agbot IBM/agbot.\",\n  \"2021-04-27 12:19:47:   Node received Proposal message using agreement 66ed9bb65e4405db0f3904d0e8443c7b80c9067f56db9220f2715cb53efd03d3 for service IBM/ibm.helloworld from the agbot IBM/agbot.\",\n  \"2021-04-27 12:19:48:   Agreement 593a50ceadeae6c83f74b63d2591cb87af962472a8c3e4cd18d007d14d78c00e already exists, ignoring proposal: ibm.helloworld\",\n  \"2021-04-27 12:19:55:   Agreement reached for service ibm.helloworld. The agreement id is 593a50ceadeae6c83f74b63d2591cb87af962472a8c3e4cd18d007d14d78c00e.\",\n  \"2021-04-27 12:19:56:   Start dependent services for IBM/ibm.helloworld.\",\n  \"2021-04-27 12:19:56:   Start workload service for IBM/ibm.helloworld.\",\n  \"2021-04-27 12:20:22:   Image loaded for IBM/ibm.helloworld.\",\n  \"2021-04-27 12:20:41:   Workload service containers for IBM/ibm.helloworld are up and running.\"\n```\n\n  </AccordionItem>\n</Accordion>\n\n(optional) Use the hzn command on this edge node to view services, patterns, and deployment policies in the Horizon Exchange. Set your specific information as environment variables in your shell and run these commands:\n\n```bash\neval export $(cat agent-install.cfg)\nhzn exchange service list IBM/\nhzn exchange pattern list IBM/\nhzn exchange deployment listpolicy\n```\n\nExplore all of the hzn command flags and subcommands:\n\n```bash\nhzn --help\n```\n\nFinally run the following command to unregister the device again and remove the sample edge service\n\n```bash\nhzn unregister -f\n```\n\n<Accordion>\n  <AccordionItem title=\"unregister output\">\n\n```bash\n$ hzn unregister -f\nUnregistering this node, cancelling all agreements, stopping all workloads, and restarting Horizon...\nWaiting for Horizon node unregister to complete: No Timeout specified ...\nWaiting for agent service to restart and checking the node configuration state...\nHorizon node unregistered. You may now run 'hzn register ...' again, if desired.\n```\n\n  </AccordionItem>\n</Accordion>\n\nYour device should show up in IBM Edge Application Manager UI node view in unregistered state.\n![IEAM-node-unregistered](../images/IEAM-node-unregistered.png)\n\nYour are now ready to start developing your first edge service\n\n\n","type":"Mdx","contentDigest":"63a3954ebf9acea477fa56f871feef56","owner":"gatsby-plugin-mdx","counter":367},"frontmatter":{"title":"Connect your Device","tabs":["English","Deutsch","Espanol"],"description":"None"},"exports":{},"rawBody":"---\ntitle: Connect your Device\ntabs: ['English', 'Deutsch', 'Espanol']\ndescription: None\n---\n\n<PageDescription>\n\nIn this section you will setup your target environment in which you will deploy the sample application and the edge agent.\nIf you want to bring your own environemt, feel free to do so.\n\n</PageDescription>\n\n## Agent Installation and Registration\n\nIn this lab we will use the automated agent installation and registration method. Other option are\n* Advanced manual agent installation and registration \n* Bulk agent installation and registration\n* Secure Device Onboarding (SDO) agent installation and registration\n\n<InlineNotification kind=\"info\">\n\n**Note:** These steps are the same for all edge device types (architectures).\n\n</InlineNotification>\n\nIf you have not already perpared your device with the steps in [Requirements](/edge-lab/requirements/english) section, do that now.\n\nThe IBM Edge Application Manager should not list any or your device as shown below\n![IEAM-nonode](../images/IEAM-nonode.png)\n\n1) Set the following environment variables on your device.\n```bash\nexport HZN_DEVICE_ID=<yourname>\nexport HZN_EXCHANGE_USER_AUTH=iamapikey:<api-key>\nexport HZN_ORG_ID=<your-exchange-organization>\nexport HZN_FSS_CSSURL=https://<ieam-management-hub-ingress>/edge-css/\nexport HZN_EXCHANGE_URL=https://<ieam-management-hub-ingress>/edge-exchange/v1\n```\n\n<InlineNotification kind=\"info\">\n\n**Note:** we have already prepared the environment to [setup edge nodes](https://www.ibm.com/docs/en/edge-computing/4.2?topic=installation-prepare-setting-up-edge-nodes), where we created the apikey and organisation for you.\n\n</InlineNotification>\n\n2) For the automated installation download the agent-install.sh script from the Cloud Sync Service (CSS) to your device and make it executable:\n```bash\ncurl -u \"$HZN_ORG_ID/$HZN_EXCHANGE_USER_AUTH\" -k -o agent-install.sh $HZN_FSS_CSSURL/api/v1/objects/IBM/agent_files/agent-install.sh/data\nchmod +x agent-install.sh\n```\n\n3) Run agent-install.sh to get the necessary files from CSS, install and configure the Horizon agent, and register your edge device to run the helloworld sample edge service:\n```bash\nsudo -s -E ./agent-install.sh -i 'css:' -p IBM/pattern-ibm.helloworld -w '*' -T 120\n```\n\n<InlineNotification kind=\"info\">\n\n**Note:** To see all available agent-install.sh flag descriptions run: `./agent-install.sh -h`\n\n</InlineNotification>\n\n<Accordion>\n  <AccordionItem title=\"agent-install output\">\n\nYou shoud see the following cli output for a successful installation. Depending on your device and connection this will take some time.\n\n```bash\n$ curl -u \"$HZN_ORG_ID/$HZN_EXCHANGE_USER_AUTH\" -k -o agent-install.sh $HZN_FSS_CSSURL/api/v1/objects/IBM/agent_files/agent-install.sh/data\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100  113k    0  113k    0     0  76924      0 --:--:--  0:00:01 --:--:-- 76924\n$ chmod +x agent-install.sh\n$ sudo -s -E ./agent-install.sh -i 'css:' -p IBM/pattern-ibm.helloworld -w '*' -T 120\n2021-04-27 12:12:57 AGENT_INSTALL_ZIP:  (from default value)\n2021-04-27 12:12:58 INPUT_FILE_PATH: css: (from command line flag)\n2021-04-27 12:12:58 INPUT_FILE_PATH adjusted to: css:/api/v1/objects/IBM/agent_files\n2021-04-27 12:12:58 AGENT_CFG_FILE:  (from default value)\n2021-04-27 12:12:58 AGENT_VERBOSITY: 3 (from environment variable)\n2021-04-27 12:12:58 HZN_ORG_ID: thinkedge (from environment variable)\n2021-04-27 12:12:58 HZN_MGMT_HUB_CERT_PATH:  (from default value)\n2021-04-27 12:12:58 AGENT_CERT_FILE: agent-install.crt (from default value)\n2021-04-27 12:12:58 HZN_FSS_CSSURL: https://cp-console.edge-lab-2172-think21-6a6ac8c3d7a0ea50590dce8fa3fd273c-0000.us-south.containers.appdomain.cloud/edge-css (from environment variable)\n2021-04-27 12:12:58 HZN_EXCHANGE_USER_AUTH: ****** (from environment variable)\n2021-04-27 12:12:58 HZN_EXCHANGE_NODE_AUTH:  (from default value)\n2021-04-27 12:12:58 Downloading file https://cp-console.edge-lab-2172-think21-6a6ac8c3d7a0ea50590dce8fa3fd273c-0000.us-south.containers.appdomain.cloud/edge-css/api/v1/objects/IBM/agent_files/agent-install.crt/data using --insecure ...\n2021-04-27 12:12:59 Downloading file https://cp-console.edge-lab-2172-think21-6a6ac8c3d7a0ea50590dce8fa3fd273c-0000.us-south.containers.appdomain.cloud/edge-css/api/v1/objects/IBM/agent_files/agent-install.cfg/data ...\n2021-04-27 12:13:00 AGENT_SKIP_REGISTRATION: false (from default value)\n2021-04-27 12:13:00 HZN_EXCHANGE_URL: https://cp-console.edge-lab-2172-think21-6a6ac8c3d7a0ea50590dce8fa3fd273c-0000.us-south.containers.appdomain.cloud/edge-exchange/v1 (from configuration file)\n2021-04-27 12:13:00 NODE_ID:  (from default value)\n2021-04-27 12:13:00 HZN_DEVICE_ID: my-pi (from environment variable)\n2021-04-27 12:13:00 HZN_NODE_ID:  (from default value)\n2021-04-27 12:13:00 HZN_EXCHANGE_PATTERN: IBM/pattern-ibm.helloworld (from command line flag)\n2021-04-27 12:13:00 HZN_NODE_POLICY:  (from default value)\n2021-04-27 12:13:00 AGENT_WAIT_FOR_SERVICE: * (from command line flag)\n2021-04-27 12:13:00 AGENT_WAIT_FOR_SERVICE_ORG:  (from default value)\n2021-04-27 12:13:00 AGENT_REGISTRATION_TIMEOUT: 120 (from command line flag)\n2021-04-27 12:13:00 AGENT_OVERWRITE: false (from default value)\n2021-04-27 12:13:00 AGENT_SKIP_PROMPT: false (from default value)\n2021-04-27 12:13:00 AGENT_INSTALL_ZIP: agent-install-files.tar.gz (from default value)\n2021-04-27 12:13:00 AGENT_DEPLOY_TYPE: device (from default value)\n2021-04-27 12:13:00 AGENT_WAIT_MAX_SECONDS: 30 (from default value)\n2021-04-27 12:13:01 NODE_ID_MAPPING_FILE: node-id-mapping.csv (from default value)\n2021-04-27 12:13:01 PKG_APT_KEY:  (from default value)\n2021-04-27 12:13:01 APT_REPO_BRANCH: updates (from default value)\n2021-04-27 12:13:01 AGENT_IMAGE_TAR_FILE: amd64_anax.tar.gz (from default value)\n2021-04-27 12:13:05 OS: linux, Distro: raspbian, Distro Release: 10, Distro Code Name: buster, Architecture: armhf\n2021-04-27 12:13:05 WARNING: Using node id from HZN_DEVICE_ID\n2021-04-27 12:13:05 Node type: device\n2021-04-27 12:13:05 Updating apt package index...\n2021-04-27 12:14:15 Installing prerequisites, this could take a minute...\n2021-04-27 12:16:17 Verifying that node my-pi in the exchange is type device (if it exists)...\n2021-04-27 12:16:18 Creating /etc/default/horizon ...\n2021-04-27 12:16:19 Downloading file https://cp-console.edge-lab-2172-think21-6a6ac8c3d7a0ea50590dce8fa3fd273c-0000.us-south.containers.appdomain.cloud/edge-css/api/v1/objects/IBM/agent_files/horizon-agent-linux-deb-armhf.tar.gz/data ...\n2021-04-27 12:16:42 Installing the horizon packages in /root/. ...\n2021-04-27 12:18:22 Waiting for state: Horizon agent ready \n2021-04-27 12:18:24 Done: Horizon agent ready\n2021-04-27 12:18:25 Registering the edge node...\nhzn register -m 'make-pi' -o 'thinkedge' -u 'iamapikey:I1qBL7mXekVo-jxJf_3M3th6xEWaPuuYvegbxBZthSoL' -n 'my-pi:' -s '*'  -t '120' -p 'IBM/pattern-ibm.helloworld'\nHorizon Exchange base URL: https://cp-console.edge-lab-2172-think21-6a6ac8c3d7a0ea50590dce8fa3fd273c-0000.us-south.containers.appdomain.cloud/edge-exchange/v1\nGenerated random node token\nNode thinkedge/my-pi does not exist in the Exchange with the specified token, creating/updating it...\nnode added or updated\nNode my-pi created.\nWill proceeed with the given pattern IBM/pattern-ibm.helloworld.\nInitializing the Horizon node with node type 'device'...\nNote: no input file was specified. This is only valid if none of the services need variables set.\nHowever, if there is 'userInput' specified in the node already in the Exchange, the userInput will be used.\nChanging Horizon state to configured to register this node with Horizon...\nHorizon node is registered. Workload services should begin executing shortly.\nWaiting for up to 120 seconds for following services to start:\n\tIBM/ibm.helloworld\nStatus of the services you are watching:\n\tIBM/ibm.helloworld \tWaiting: no agreements formed yet\nStatus of the services you are watching:\n\tIBM/ibm.helloworld \tWaiting: agreement is formed\nStatus of the services you are watching:\n\tIBM/ibm.helloworld \tWaiting: agreement is accepted\nStatus of the services you are watching:\n\tIBM/ibm.helloworld \tWaiting: service is created\nStatus of the services you are watching:\n\tIBM/ibm.helloworld \tWaiting: service is created\nStatus of the services you are watching:\n\tIBM/ibm.helloworld \tWaiting: service is created\nTimeout waiting for some services to successfully start. Analyzing possible reasons for the timeout...\n\nCurrently, there are no errors recorded in the node's event log.\nUsing the 'hzn deploycheck all -p' command to verify that node, service configuration and pattern is compatible.\nNeither node id nor node policy is specified. Getting node policy from the local node.\nNeither node id nor node user input file is specified. Getting node user input from the local node.\n{\n  \"compatible\": true,\n  \"reason\": {\n    \"IBM/ibm.helloworld_1.0.0_arm\": \"Compatible\"\n  }\n}\n\nAnalysis complete.\n\n```\n\n  </AccordionItem>\n</Accordion>\n\nIf you look at the IBM Edge Application Manager UI you will see that your device shows up in the Nodes tab. Finally it should be in the state **Active with services** the agent linstallation we have choose also deploys a sample service.\n![IEAM-nodes-chart](../images/IEAM-nodes-chart.png)\n\nYou can switch between the chart and list view\n![IEAM-nodes-list](../images/IEAM-nodes-list.png)\n\nSelect your device to get detailed information about your node\n![IEAM-node-details](../images/IEAM-node-details.png)\n\nTo view the helloworld sample edge service output which is installed as part of the agent-install run\n\n```bash\nhzn service log -f ibm.helloworld\n# Press Ctrl-c to stop the output display\n```\n\n<Accordion>\n  <AccordionItem title=\"service output\">\n\n```bash\n$ hzn service log -f ibm.helloworld\nDisplaying log messages for service ibm.helloworld with service id 593a50ceadeae6c83f74b63d2591cb87af962472a8c3e4cd18d007d14d78c00e.\nUse ctrl-C to terminate this command.\nApr 27 12:20:40 make-pi workload-593a50ceadeae6c83f74b63d2591cb87af962472a8c3e4cd18d007d14d78c00e_ibm.helloworld[1407]: my-pi says: Hello World!!\nApr 27 12:20:43 make-pi workload-593a50ceadeae6c83f74b63d2591cb87af962472a8c3e4cd18d007d14d78c00e_ibm.helloworld[1407]: my-pi says: Hello World!!\nApr 27 12:20:46 make-pi workload-593a50ceadeae6c83f74b63d2591cb87af962472a8c3e4cd18d007d14d78c00e_ibm.helloworld[1407]: my-pi says: Hello World!!\nApr 27 12:20:49 make-pi workload-593a50ceadeae6c83f74b63d2591cb87af962472a8c3e4cd18d007d14d78c00e_ibm.helloworld[1407]: my-pi says: Hello World!!\nApr 27 12:20:52 make-pi workload-593a50ceadeae6c83f74b63d2591cb87af962472a8c3e4cd18d007d14d78c00e_ibm.helloworld[1407]: my-pi says: Hello World!!\nApr 27 12:20:55 make-pi workload-593a50ceadeae6c83f74b63d2591cb87af962472a8c3e4cd18d007d14d78c00e_ibm.helloworld[1407]: my-pi says: Hello World!!\nApr 27 12:20:58 make-pi workload-593a50ceadeae6c83f74b63d2591cb87af962472a8c3e4cd18d007d14d78c00e_ibm.helloworld[1407]: my-pi says: Hello World!!\n```\n\n  </AccordionItem>\n</Accordion>\n\n\nIf the helloworld edge service does not start, run this command to see error messages:\n\n```bash\nhzn eventlog list -f\n# Press Ctrl-c to stop the output display\n```\n\n<Accordion>\n  <AccordionItem title=\"eventlog output\">\n\n```bash\n$ hzn eventlog list -f\n  \"2021-04-27 12:18:30:   Start node configuration/registration for node my-pi.\",\n  \"2021-04-27 12:18:36:   Start service auto configuration for IBM/ibm.helloworld.\",\n  \"2021-04-27 12:18:36:   Complete service auto configuration for IBM/ibm.helloworld.\",\n  \"2021-04-27 12:18:37:   Complete node configuration/registration for node my-pi.\",\n  \"2021-04-27 12:18:37:   Start policy advertising with the Exchange for service IBM/ibm.helloworld.\",\n  \"2021-04-27 12:18:38:   Complete policy advertising with the Exchange for service IBM/ibm.helloworld.\",\n  \"2021-04-27 12:19:42:   Node received Proposal message using agreement 593a50ceadeae6c83f74b63d2591cb87af962472a8c3e4cd18d007d14d78c00e for service IBM/ibm.helloworld from the agbot IBM/agbot.\",\n  \"2021-04-27 12:19:47:   Node received Proposal message using agreement 66ed9bb65e4405db0f3904d0e8443c7b80c9067f56db9220f2715cb53efd03d3 for service IBM/ibm.helloworld from the agbot IBM/agbot.\",\n  \"2021-04-27 12:19:48:   Agreement 593a50ceadeae6c83f74b63d2591cb87af962472a8c3e4cd18d007d14d78c00e already exists, ignoring proposal: ibm.helloworld\",\n  \"2021-04-27 12:19:55:   Agreement reached for service ibm.helloworld. The agreement id is 593a50ceadeae6c83f74b63d2591cb87af962472a8c3e4cd18d007d14d78c00e.\",\n  \"2021-04-27 12:19:56:   Start dependent services for IBM/ibm.helloworld.\",\n  \"2021-04-27 12:19:56:   Start workload service for IBM/ibm.helloworld.\",\n  \"2021-04-27 12:20:22:   Image loaded for IBM/ibm.helloworld.\",\n  \"2021-04-27 12:20:41:   Workload service containers for IBM/ibm.helloworld are up and running.\"\n```\n\n  </AccordionItem>\n</Accordion>\n\n(optional) Use the hzn command on this edge node to view services, patterns, and deployment policies in the Horizon Exchange. Set your specific information as environment variables in your shell and run these commands:\n\n```bash\neval export $(cat agent-install.cfg)\nhzn exchange service list IBM/\nhzn exchange pattern list IBM/\nhzn exchange deployment listpolicy\n```\n\nExplore all of the hzn command flags and subcommands:\n\n```bash\nhzn --help\n```\n\nFinally run the following command to unregister the device again and remove the sample edge service\n\n```bash\nhzn unregister -f\n```\n\n<Accordion>\n  <AccordionItem title=\"unregister output\">\n\n```bash\n$ hzn unregister -f\nUnregistering this node, cancelling all agreements, stopping all workloads, and restarting Horizon...\nWaiting for Horizon node unregister to complete: No Timeout specified ...\nWaiting for agent service to restart and checking the node configuration state...\nHorizon node unregistered. You may now run 'hzn register ...' again, if desired.\n```\n\n  </AccordionItem>\n</Accordion>\n\nYour device should show up in IBM Edge Application Manager UI node view in unregistered state.\n![IEAM-node-unregistered](../images/IEAM-node-unregistered.png)\n\nYour are now ready to start developing your first edge service\n\n\n","fileAbsolutePath":"/Users/mkeppel/Documents/GitHub/think-labs/src/pages/edge-lab/connect/english.mdx"}}},"staticQueryHashes":["1364590287","137577622","137577622","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","768070550"]}