{"componentChunkName":"component---src-pages-instana-lab-agent-mdx","path":"/instana-lab/agent/","result":{"pageContext":{"frontmatter":{"title":"Install the Agent","description":"None"},"relativePagePath":"/instana-lab/agent.mdx","titleType":"append","MdxNode":{"id":"4d8623c5-9f82-52df-beaa-f1a0136b52db","children":[],"parent":"574b522e-1655-5350-baa9-c1c4944f1c82","internal":{"content":"---\ntitle: Install the Agent\ndescription: None\n---\n\n<PageDescription>\n\nIn this section you will install the Instana Agent to your target environment which you have set up in the previous step.\n\n</PageDescription>\n\n## Installing the Instana Host Agent on Kubernetes\n\nWhile there are are multiple options like installation on managed services (AWS, Google, IBM Cloud, etc.) or operating systems, such as Linux, Mac OS, Microsoft Windows or Unix, we will install the host agent on a K8s platform (others self-managed platfroms could be Cloud foundry, Docker or OpenShift). A complete list of supported environments is available in the Instana Documentation.\n\nThere two type of agents avavailable, the dynamic or the static host agent. The static agent brings all the sensors to monitor the processes int he environment, whereas the dynamic agent connects to a sensor reposistory and downloads the needed sensors on demand. Also sensor updates are dynamic as new version are made availabe.\n\nIn this lab we will use the dynamic host agent.\n\nTo get to the installation options for K8s navigate in the menue on the left of the Instana UI to `More -> Agents` and click on **Installing Instana Agents**\n\n<Row>\n  <Column colMd={4} colLg={4}>\n\n![instana-agent](./images/instana-agent.png)\n\n  </Column>\n  <Column colMd={4} colLg={4}>\n\n![instana-agent-install](./images/instana-agent-install.png)\n\n  </Column>\n</Row>\n\nSelect Kubernetes as platform\n\nYou can explore the other platforms and their installation option if you like.\n\nFrom the **Technology** dropdown select **Operator** as installation option. Instana provides also the option to install the agent through a helm chart, or YAML file. YAML files are also available for the managed K8s services on AWS, Google and Azure Cloud.\nThe Operator provides an automated way to install and configure the host agent.\n![instana-operator-select](./images/instana-operator-select.png)\n\nTo install the Operator, use the Cloud Shell tab within your browser, that you have configured in the Setup Environment section of this lab.\n\nThe operator uses the cert-manager, which is not installed by default in the IBM Cloud Kubernetes services. We install it by issuing the following command, as a prereq.\n\n```bash\nkubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.8.0/cert-manager.yaml\n```\n\nExecute the following command to deploy the instana operator into the namespace `instana-agent`\n\n```bash\nkubectl apply -f https://github.com/instana/instana-agent-operator/releases/latest/download/instana-agent-operator.yaml\n```\n\nThe operator should now be up and running and is waiting for a custom resource definition (crd) to be created.\nYou can check this issuing\n```bash\nkubectl get pods -n instana-agent\n```\n\nExecute the following with the values from the **Installing Instana Agents** page to let the operator deploy the agent.\n\n<InlineNotification kind=\"info\">\n\n**Note:** Replace the values for the following variables with your own\n* &lt;Instana Application Key&gt;\n* &lt;Instana Service Endpoint&gt;\n* &lt;your name&gt;\n* &lt;your clustername&gt;\n\n</InlineNotification>\n\nExport Variables:\n```bash\nexport INSTANA_APPLICATION_KEY=<Instana Application Key>\nexport INSTANA_SERVICE_ENDPOINT=<Instana Service Endpoint>\nexport NAME=<your name>\nexport CLUSTERNAME=<your clustername>\n```\n\nDeploy Agent:\n```yaml\ncat <<EOF | kubectl apply -f -\napiVersion: instana.io/v1beta1\nkind: InstanaAgent\nmetadata:\n  name: instana-agent\n  namespace: instana-agent\nspec:\n  agent.zone.name: IBM Cloud\n  agent.key: $INSTANA_APPLICATION_KEY\n  agent.endpoint.host: $INSTANA_SERVICE_ENDPOINT\n  agent.endpoint.port: 443\n  agent.env:\n    INSTANA_AGENT_TAGS: \"$NAME,bootcamp,lab\"\n  cluster.name: $CLUSTERNAME\n  config.files:\n    configuration.yaml: |\n      # You can leave this empty, or use this to configure your instana agent.\n      # See https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/\nEOF\n```\n\nYour agent should now be deploying in the instana-agent namespace.\n\nYou can check the deployment status by by looking at the agent logs\n\n```bash\nkubectl logs $(kubectl get pods --no-headers -n instana-agent | grep -v controller-manager | awk 'NR==1{print $1}') -f -n instana-agent\n```\n\nLook for **Instana agent started**\n```bash\n2021-05-11T13:31:00.841+00:00 | INFO  | agent-starter                    | AgentBootstrap   | com.instana.agent-bootstrap - 1.2.13 | Starting agent now\n2021-05-11T13:31:00.842+00:00 | INFO  | agent-starter                    | AgentImpl        | com.instana.agent - 1.1.597 | Starting Instana agent.\n2021-05-11T13:31:00.845+00:00 | INFO  | agent-starter                    | AgentImpl        | com.instana.agent - 1.1.597 | Instana agent started.\n```\n\n<InlineNotification kind=\"info\">\n\n**Note:** Press CTRL-c to exit the logs\n\n</InlineNotification>\n\nGo to the Instana UI and select the infrastructure view in the menue on the left - your environment should appear after a short time.\n\nInstana Agents are meant to discover technologies and instrument them automatically. However in some cases it is necessary to add required modules for interpreted languages. In order to help the agent to be more automatic it is recommended to use the Instana Autotrace Webhook in Kubernetes environments. This will automatically added required modules to node.js, .NET and Ruby applications.\nInstall that webhook with the following command.\n```bash\nhelm install --create-namespace --namespace instana-autotrace-webhook instana-autotrace-webhook --repo https://agents.instana.io/helm instana-autotrace-webhook --set autotrace.ingress_ngnix.enable=true --set webhook.imagePullCredentials.password=$INSTANA_APPLICATION_KEY\n```\nAfter the mutating webhook is installed, every new deployment will be automatically covered.\n\nYou can filter the infrastructure view by entering `entity.tag:<your name>`\n![instana-infrastructure](./images/instana-infrastructure.png)\n","type":"Mdx","contentDigest":"41e7282e293a70d4df197f8b94b8a57f","owner":"gatsby-plugin-mdx","counter":299},"frontmatter":{"title":"Install the Agent","description":"None"},"exports":{},"rawBody":"---\ntitle: Install the Agent\ndescription: None\n---\n\n<PageDescription>\n\nIn this section you will install the Instana Agent to your target environment which you have set up in the previous step.\n\n</PageDescription>\n\n## Installing the Instana Host Agent on Kubernetes\n\nWhile there are are multiple options like installation on managed services (AWS, Google, IBM Cloud, etc.) or operating systems, such as Linux, Mac OS, Microsoft Windows or Unix, we will install the host agent on a K8s platform (others self-managed platfroms could be Cloud foundry, Docker or OpenShift). A complete list of supported environments is available in the Instana Documentation.\n\nThere two type of agents avavailable, the dynamic or the static host agent. The static agent brings all the sensors to monitor the processes int he environment, whereas the dynamic agent connects to a sensor reposistory and downloads the needed sensors on demand. Also sensor updates are dynamic as new version are made availabe.\n\nIn this lab we will use the dynamic host agent.\n\nTo get to the installation options for K8s navigate in the menue on the left of the Instana UI to `More -> Agents` and click on **Installing Instana Agents**\n\n<Row>\n  <Column colMd={4} colLg={4}>\n\n![instana-agent](./images/instana-agent.png)\n\n  </Column>\n  <Column colMd={4} colLg={4}>\n\n![instana-agent-install](./images/instana-agent-install.png)\n\n  </Column>\n</Row>\n\nSelect Kubernetes as platform\n\nYou can explore the other platforms and their installation option if you like.\n\nFrom the **Technology** dropdown select **Operator** as installation option. Instana provides also the option to install the agent through a helm chart, or YAML file. YAML files are also available for the managed K8s services on AWS, Google and Azure Cloud.\nThe Operator provides an automated way to install and configure the host agent.\n![instana-operator-select](./images/instana-operator-select.png)\n\nTo install the Operator, use the Cloud Shell tab within your browser, that you have configured in the Setup Environment section of this lab.\n\nThe operator uses the cert-manager, which is not installed by default in the IBM Cloud Kubernetes services. We install it by issuing the following command, as a prereq.\n\n```bash\nkubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.8.0/cert-manager.yaml\n```\n\nExecute the following command to deploy the instana operator into the namespace `instana-agent`\n\n```bash\nkubectl apply -f https://github.com/instana/instana-agent-operator/releases/latest/download/instana-agent-operator.yaml\n```\n\nThe operator should now be up and running and is waiting for a custom resource definition (crd) to be created.\nYou can check this issuing\n```bash\nkubectl get pods -n instana-agent\n```\n\nExecute the following with the values from the **Installing Instana Agents** page to let the operator deploy the agent.\n\n<InlineNotification kind=\"info\">\n\n**Note:** Replace the values for the following variables with your own\n* &lt;Instana Application Key&gt;\n* &lt;Instana Service Endpoint&gt;\n* &lt;your name&gt;\n* &lt;your clustername&gt;\n\n</InlineNotification>\n\nExport Variables:\n```bash\nexport INSTANA_APPLICATION_KEY=<Instana Application Key>\nexport INSTANA_SERVICE_ENDPOINT=<Instana Service Endpoint>\nexport NAME=<your name>\nexport CLUSTERNAME=<your clustername>\n```\n\nDeploy Agent:\n```yaml\ncat <<EOF | kubectl apply -f -\napiVersion: instana.io/v1beta1\nkind: InstanaAgent\nmetadata:\n  name: instana-agent\n  namespace: instana-agent\nspec:\n  agent.zone.name: IBM Cloud\n  agent.key: $INSTANA_APPLICATION_KEY\n  agent.endpoint.host: $INSTANA_SERVICE_ENDPOINT\n  agent.endpoint.port: 443\n  agent.env:\n    INSTANA_AGENT_TAGS: \"$NAME,bootcamp,lab\"\n  cluster.name: $CLUSTERNAME\n  config.files:\n    configuration.yaml: |\n      # You can leave this empty, or use this to configure your instana agent.\n      # See https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/\nEOF\n```\n\nYour agent should now be deploying in the instana-agent namespace.\n\nYou can check the deployment status by by looking at the agent logs\n\n```bash\nkubectl logs $(kubectl get pods --no-headers -n instana-agent | grep -v controller-manager | awk 'NR==1{print $1}') -f -n instana-agent\n```\n\nLook for **Instana agent started**\n```bash\n2021-05-11T13:31:00.841+00:00 | INFO  | agent-starter                    | AgentBootstrap   | com.instana.agent-bootstrap - 1.2.13 | Starting agent now\n2021-05-11T13:31:00.842+00:00 | INFO  | agent-starter                    | AgentImpl        | com.instana.agent - 1.1.597 | Starting Instana agent.\n2021-05-11T13:31:00.845+00:00 | INFO  | agent-starter                    | AgentImpl        | com.instana.agent - 1.1.597 | Instana agent started.\n```\n\n<InlineNotification kind=\"info\">\n\n**Note:** Press CTRL-c to exit the logs\n\n</InlineNotification>\n\nGo to the Instana UI and select the infrastructure view in the menue on the left - your environment should appear after a short time.\n\nInstana Agents are meant to discover technologies and instrument them automatically. However in some cases it is necessary to add required modules for interpreted languages. In order to help the agent to be more automatic it is recommended to use the Instana Autotrace Webhook in Kubernetes environments. This will automatically added required modules to node.js, .NET and Ruby applications.\nInstall that webhook with the following command.\n```bash\nhelm install --create-namespace --namespace instana-autotrace-webhook instana-autotrace-webhook --repo https://agents.instana.io/helm instana-autotrace-webhook --set autotrace.ingress_ngnix.enable=true --set webhook.imagePullCredentials.password=$INSTANA_APPLICATION_KEY\n```\nAfter the mutating webhook is installed, every new deployment will be automatically covered.\n\nYou can filter the infrastructure view by entering `entity.tag:<your name>`\n![instana-infrastructure](./images/instana-infrastructure.png)\n","fileAbsolutePath":"/Users/mkeppel/Documents/GitHub/think-labs/src/pages/instana-lab/agent.mdx"}}},"staticQueryHashes":["1364590287","137577622","137577622","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","768070550"]}