{"componentChunkName":"component---src-pages-instana-lab-application-mdx","path":"/instana-lab/application/","result":{"pageContext":{"frontmatter":{"title":"Installing Application","description":"None"},"relativePagePath":"/instana-lab/application.mdx","titleType":"append","MdxNode":{"id":"c4b3ab69-11f6-5b55-94e3-ce102935890c","children":[],"parent":"ac1241ed-1a40-5ee2-8313-fb4806a923f5","internal":{"content":"---\ntitle: Installing Application\ndescription: None\n---\n\n<PageDescription>\n\nIn this part of the lab you will install a sample application into your environment and see how Instana does an automatic discovery to achieve full observability of your enterprise.\n</PageDescription>\n\n## Installing the Robot-Shop Application\n\n**Stan's Robot Shop** is a sample microservices application which built with different technologies like NodeJS, Java, MongoDB, RabbitMQ, etc. to demonstrate the monitoring capabilities.\nYou can look to the [robot-shop](https://github.com/instana/robot-shop) git repository for more details.\n\nWe will use a helm-chart with helm v3.x to install the appliction.\n\n1. Create a namespace in which we will run robot-shop by executing\n\n```bash\nkubectl create ns robot-shop\n```\n\n2. To change the context in kubectl to use the robot-shop namespace execute\n```bash\nkubectl config set-context --current --namespace=robot-shop\n```\n\n\n3. Get the helm chart from [here](./robot-shop-1.1.0.tgz) with curl\n```bash\ncurl -fsSL -o robot-shop.tar.gz https://github.com/mkeppeler/instana/raw/main/robot-shop-1.1.0.tgz\n```\nThe execution of the helm chart requires helm version 3. When you completed the Setup Environment section of this lab, you should have configured helm 3.\nIf you are unsure, check with:\n```bash\nhelm3 version\n```\n\n4. Execute the helm installation by issuing the following command in the root of the helm chart directory\n```bash\nhelm3 install robot-shop \\\n  --set psp.enabled=true \\\n  --set eum.key=\"z-l22eiqRriimvOlqRF30Q\" \\\n  --set eum.url=\"https://eum-green-saas.instana.io\" \\\n  --namespace robot-shop \\\n  ./robot-shop.tar.gz\n```\n\n5. Check that the apllication get deployed correctly and is up and running\n```bash\nkubectl get pods\n```\n\n<InlineNotification kind=\"info\">\n\n**Note:** This can take some time depending on the environment, because the container images need to be downloaded.\n\n</InlineNotification>\n\n6. After the pods are all pods are ready and show the status running, lookup the endpoint of your application access it\n```bash\nexport CLUSTER_ID=$(ibmcloud ks cluster ls | grep lab2220 | awk '{print $2}')\nNODEPORT=$(kubectl get -o jsonpath=\"{.spec.ports[0].nodePort}\" service web)\nURL=$(ibmcloud ks cluster get --cluster $CLUSTER_ID --show-resources | grep \"Ingress Subdomain\" | awk '{print $NF}')\necho \"http://$URL:$NODEPORT\"\n```\n\nCopy the URL output to a browser and hit enter. You should be presented with **Stan's Robot Shop**\n![stans-robot-shop](./images/stans-robot-shop.png)\n\nCongratulations you can now proceed to the next step.\n","type":"Mdx","contentDigest":"8c3b27b878e69700bc609806bf58e0f3","owner":"gatsby-plugin-mdx","counter":344},"frontmatter":{"title":"Installing Application","description":"None"},"exports":{},"rawBody":"---\ntitle: Installing Application\ndescription: None\n---\n\n<PageDescription>\n\nIn this part of the lab you will install a sample application into your environment and see how Instana does an automatic discovery to achieve full observability of your enterprise.\n</PageDescription>\n\n## Installing the Robot-Shop Application\n\n**Stan's Robot Shop** is a sample microservices application which built with different technologies like NodeJS, Java, MongoDB, RabbitMQ, etc. to demonstrate the monitoring capabilities.\nYou can look to the [robot-shop](https://github.com/instana/robot-shop) git repository for more details.\n\nWe will use a helm-chart with helm v3.x to install the appliction.\n\n1. Create a namespace in which we will run robot-shop by executing\n\n```bash\nkubectl create ns robot-shop\n```\n\n2. To change the context in kubectl to use the robot-shop namespace execute\n```bash\nkubectl config set-context --current --namespace=robot-shop\n```\n\n\n3. Get the helm chart from [here](./robot-shop-1.1.0.tgz) with curl\n```bash\ncurl -fsSL -o robot-shop.tar.gz https://github.com/mkeppeler/instana/raw/main/robot-shop-1.1.0.tgz\n```\nThe execution of the helm chart requires helm version 3. When you completed the Setup Environment section of this lab, you should have configured helm 3.\nIf you are unsure, check with:\n```bash\nhelm3 version\n```\n\n4. Execute the helm installation by issuing the following command in the root of the helm chart directory\n```bash\nhelm3 install robot-shop \\\n  --set psp.enabled=true \\\n  --set eum.key=\"z-l22eiqRriimvOlqRF30Q\" \\\n  --set eum.url=\"https://eum-green-saas.instana.io\" \\\n  --namespace robot-shop \\\n  ./robot-shop.tar.gz\n```\n\n5. Check that the apllication get deployed correctly and is up and running\n```bash\nkubectl get pods\n```\n\n<InlineNotification kind=\"info\">\n\n**Note:** This can take some time depending on the environment, because the container images need to be downloaded.\n\n</InlineNotification>\n\n6. After the pods are all pods are ready and show the status running, lookup the endpoint of your application access it\n```bash\nexport CLUSTER_ID=$(ibmcloud ks cluster ls | grep lab2220 | awk '{print $2}')\nNODEPORT=$(kubectl get -o jsonpath=\"{.spec.ports[0].nodePort}\" service web)\nURL=$(ibmcloud ks cluster get --cluster $CLUSTER_ID --show-resources | grep \"Ingress Subdomain\" | awk '{print $NF}')\necho \"http://$URL:$NODEPORT\"\n```\n\nCopy the URL output to a browser and hit enter. You should be presented with **Stan's Robot Shop**\n![stans-robot-shop](./images/stans-robot-shop.png)\n\nCongratulations you can now proceed to the next step.\n","fileAbsolutePath":"/Users/mkeppel/Documents/GitHub/think-labs/src/pages/instana-lab/application.mdx"}}},"staticQueryHashes":["1054721580","1054721580","1364590287","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","768070550"]}