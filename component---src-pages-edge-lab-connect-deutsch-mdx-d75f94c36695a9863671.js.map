{"version":3,"sources":["webpack:///../instana-lab/src/pages/edge-lab/connect/deutsch.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","InlineNotification","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","kind","isMDXComponent"],"mappings":"wPAQaA,G,UAAe,IAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAkBL,EAAc,mBAChCM,EAAqBN,EAAc,sBACnCO,EAAc,CAClBR,gBAEIS,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGT,EACF,8BACD,OAAO,YAACM,EAAD,eAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,cAG5E,YAACP,EAAD,CAAiBO,QAAQ,mBACvB,kOAEF,oEACA,oJACA,sBACE,kBAAIC,WAAW,MAAf,kEACA,kBAAIA,WAAW,MAAf,oDACA,kBAAIA,WAAW,MAAf,8EAEF,YAACP,EAAD,CAAoBQ,KAAK,OAAOF,QAAQ,sBAAxC,sFAGA,qFAAoE,6BAAGC,WAAW,KAAQ,CACtF,KAAQ,8CADwD,iBAApE,2CAGA,+DACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,iDAEL,wFACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,gCAEL,mHACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,+KAIL,uRACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,uFAEL,wJACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,4BAEL,gJACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,mFAGL,2IACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,sEAGL,wSACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,+IAKL,iFACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,iBAEL,+JACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,wBAEL,gGAKJH,EAAWK,gBAAiB","file":"component---src-pages-edge-lab-connect-deutsch-mdx-d75f94c36695a9863671.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mkeppel/Documents/GitHub/instana-lab/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`In diesem Abschnitt richten Sie Ihre Zielumgebung ein, in der Sie die Beispielanwendung und den Edge-Agenten bereitstellen. Wenn Sie Ihre eigene Umgebung mitbringen möchten, können Sie dies gerne tun.`}</p>\n    </PageDescription>\n    <h2>{`Installation und Registrierung des Agenten`}</h2>\n    <p>{`In dieser Übung verwenden Sie die automatisierte Installations- und Registrierungsmethode für Agenten. Andere Optionen sind`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Erweiterte manuelle Installation und Registrierung des Agenten`}</li>\n      <li parentName=\"ul\">{`Installation und Registrierung von Massenagenten`}</li>\n      <li parentName=\"ul\">{`Installation und Registrierung des SDO-Agenten (Secure Device Onboarding)`}</li>\n    </ul>\n    <InlineNotification kind=\"info\" mdxType=\"InlineNotification\">\n**Hinweis:** Diese Schritte sind für alle Edge-Gerätetypen (Architekturen) gleich.\n    </InlineNotification>\n    <p>{`Wenn Sie Ihr Gerät noch nicht mit den Schritten im Abschnitt `}<a parentName=\"p\" {...{\n        \"href\": \"/think-labs/edge-lab/requirements/deutsch\"\n      }}>{`Anforderungen`}</a>{` vorbereitet haben, tun Sie dies jetzt.`}</p>\n    <p>{`1) Laden Sie das Agentenpaket herunter`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`curl -sSL http://ieam -o agent-install.tar\n`}</code></pre>\n    <p>{`2) Extrahieren Sie die Agent-Installationsdatei auf Ihrem Gerät`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`tar xvf agent-install.tar\n`}</code></pre>\n    <p>{`Überprüfen Sie die Konfigurationsdatei, die Sie mit der Agenteninstallation erhalten haben`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`export HZN_EXCHANGE_USER_AUTH=iamapikey:<api-key>\nexport HZN_ORG_ID=<your-exchange-organization>\nexport HZN_FSS_CSSURL=https://<ieam-management-hub-ingress>/edge-css/\n`}</code></pre>\n    <p>{`3) Führen Sie agent-install.sh aus, um die erforderlichen Dateien von CSS (Cloud Sync Service) abzurufen, installieren und konfigurieren Sie den Horizon-Agenten und registrieren Sie Ihr Edge-Gerät, um den Beispiel-Edge-Service von helloworld auszuführen:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`sudo -s ./agent-install.sh -i 'css:' -p IBM/pattern-ibm.helloworld -w '*' -T 120\n`}</code></pre>\n    <p>{`Um alle verfügbaren Beschreibungen der Flaggen für agent-install.sh anzuzeigen, führen Sie Folgendes aus: ./agent-install.sh -h`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`./agent-install.sh -h\n`}</code></pre>\n    <p>{`Anzeigen der Ausgabe des helloworld-Beispiel-Edge-Service, die im Rahmen des Agenteninstallationslaufs installiert wird`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`hzn service log -f ibm.helloworld\n# Press Ctrl-c to stop the output display\n`}</code></pre>\n    <p>{`Wenn der helloworld-Edge-Dienst nicht gestartet wird, führen Sie diesen Befehl aus, um Fehlermeldungen anzuzeigen:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`hzn eventlog list -f\n# Press Ctrl-c to stop the output display\n`}</code></pre>\n    <p>{`(optional) Verwenden Sie den Befehl hzn auf diesem Randknoten, um Dienste, Muster und Bereitstellungsrichtlinien in Horizon Exchange anzuzeigen. Legen Sie Ihre spezifischen Informationen als Umgebungsvariablen in Ihrer Shell fest und führen Sie die folgenden Befehle aus:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`eval export $(cat agent-install.cfg)\nhzn exchange service list IBM/\nhzn exchange pattern list IBM/\nhzn exchange deployment listpolicy\n`}</code></pre>\n    <p>{`Untersuchen Sie alle hzn-Befehlsflags und -Unterbefehle:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`hzn --help\n`}</code></pre>\n    <p>{`Führen Sie abschließend den folgenden Befehl aus, um die Registrierung des Geräts aufzuheben und den Beispielkantendienst zu entfernen`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`hzn unregister -f\n`}</code></pre>\n    <p>{`Sie können jetzt mit der Entwicklung Ihres First Edge-Service beginnen`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}