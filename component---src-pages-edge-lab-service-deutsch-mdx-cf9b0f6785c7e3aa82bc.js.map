{"version":3,"sources":["webpack:///../instana-lab/src/pages/edge-lab/service/deutsch.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","Tabs","Tab","InlineNotification","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","label","kind","isMDXComponent"],"mappings":"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","file":"component---src-pages-edge-lab-service-deutsch-mdx-cf9b0f6785c7e3aa82bc.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mkeppel/Documents/GitHub/instana-lab/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst Tabs = makeShortcode(\"Tabs\");\nconst Tab = makeShortcode(\"Tab\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`In diesem Abschnitt werden Sie einen Beispieldienst erstellen/entwickeln, den Sieim IBM Edge Application Manager veröffentlichen und in einem späteren Schritt bereitstellen werden.`}</p>\n    </PageDescription>\n    <h2>{`Erstellen Ihres eigenen Hello World Edge Service`}</h2>\n    <p>{`Folgen Sie den Schritten auf dieser Seite, um Ihren ersten einfachen Horizon-Edge-Service zu erstellen. Voraussetzungen für die Entwicklung eines eigenen Dienstes`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Wenn Sie dies noch nicht getan haben, führen Sie die Schritte in diesen Abschnitten aus:`}</li>\n    </ol>\n    <ul>\n      <li parentName=\"ul\">{`Voraussetzungen für die Verwendung des Hello World-Beispiel-Edge-Service`}</li>\n      <li parentName=\"ul\">{`Verwendung des Hello World-Beispiel-Edge-Dienstes mit Bereitstellungsmustern`}</li>\n    </ul>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Wenn Sie macOS als Entwicklungshost verwenden, konfigurieren Sie Docker so, dass Anmeldeinformationen in ~/.docker gespeichert werden:`}</li>\n    </ol>\n    <ul>\n      <li parentName=\"ul\">{`Öffnen Sie das Dialogfeld “Docker Preferences” (Docker-Voreinstellungen)`}</li>\n      <li parentName=\"ul\">{`Deaktivieren Sie das Kontrollkästchen Docker-Anmeldeinformationen sicher im macOS-Schlüsselbund speichern`}</li>\n    </ul>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`Wenn Sie noch keine Docker-ID haben, erhalten Sie eine unter `}<a parentName=\"li\" {...{\n          \"href\": \"https://hub.docker.com/\"\n        }}>{`hub.docker.com`}</a>{` . Melden Sie sich bei Docker Hub mit Ihrer Docker Hub-IDan:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`export DOCKER_HUB_ID=\"<dockerhubid>\"\necho \"<dockerhubpassword>\" | docker login -u $DOCKER_HUB_ID --password-stdin\n`}</code></pre>\n    <p>{`Beispiel für die Ausgabe:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`WARNING! Your password will be stored unencrypted in /home/pi/.docker/config.json.\nConfigure a credential helper to remove this warning. See\nhttps://docs.docker.com/engine/reference/commandline/login/#credentials-store\n\nLogin Succeeded\n`}</code></pre>\n    <ol {...{\n      \"start\": 4\n    }}>\n      <li parentName=\"ol\">{`Erstellen Sie ein kryptografisches Signierschlüsselpaar. Damit können Sie Dienste signieren, wenn Sie sie in der Börse veröffentlichen. Dieser Schritt muss nur einmal durchgeführt werden.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`hzn key create \"<x509-org>\" \"<x509-cn>\"\n`}</code></pre>\n    <p>{`wobei `}{`<`}{`x509-org`}{`>`}{` Ihr Firmenname ist und `}{`<`}{`x509-cn`}{`>`}{` normalerweise auf Ihre E-Mail-Adresse eingestellt ist.`}</p>\n    <ol {...{\n      \"start\": 5\n    }}>\n      <li parentName=\"ol\">{`Installieren Sie git und jq:`}</li>\n    </ol>\n    <Tabs mdxType=\"Tabs\">\n      <Tab label=\"RHEL\" mdxType=\"Tab\">\n        <pre><code parentName=\"pre\" {...{}}>{`sudo yum install -y git jq\n`}</code></pre>\n      </Tab>\n      <Tab label=\"Raspian/Ubuntu\" mdxType=\"Tab\">\n        <pre><code parentName=\"pre\" {...{}}>{`sudo apt install -y git jq\n`}</code></pre>\n      </Tab>\n      <Tab label=\"macOS\" mdxType=\"Tab\">\n        <pre><code parentName=\"pre\" {...{}}>{`brew install git jq\n`}</code></pre>\n      </Tab>\n    </Tabs>\n    <h2>{`Erstellen und Veröffentlichen Ihres eigenen Hello World Beispiel Edge Dienstes`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`cd in das Verzeichnis, in dem Sie Ihren neuen Dienst erstellen möchten, und führen Sie dann diesen Befehl aus, um die Dateien für einen einfachen Edge Dienst und die zugehörigen Horizon-Metadaten-Dateien zuerstellen:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`export USER_ID=<your-userID>\nhzn dev service new -s hello-$USER_ID -i \"$DOCKER_HUB_ID/hello-$USER_ID\"\n`}</code></pre>\n    <InlineNotification kind=\"info\" mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Beachten`}</strong>{` Sie, dass einige Projektvariablen in horizon/hzn.json definiert sind und in anderen Dateien referenziert werden, zum Beispiel horizon/service.definition.json.`}</p>\n    </InlineNotification>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Bearbeiten Sie service.sh und ändern Sie etwas Einfaches, z. B. ändern Sie “Hello” in “Hallo”.`}</li>\n    </ol>\n    <InlineNotification kind=\"info\" mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Hinweis:`}</strong>{` Dieser Dienst ist der Einfachheit halber ein Shell-Skript, aber Sie könnenIhren Dienst in jeder beliebigen Sprache schreiben.`}</p>\n    </InlineNotification>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`Erstellen Sie das Docker-Image des Dienstes:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`make\n`}</code></pre>\n    <ol {...{\n      \"start\": 4\n    }}>\n      <li parentName=\"ol\">{`Testen Sie den Dienst, indem Sie ihn in der simulierten Agentenumgebungausführen:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`hzn dev service start -S\n`}</code></pre>\n    <ol {...{\n      \"start\": 5\n    }}>\n      <li parentName=\"ol\">{`Prüfen Sie, ob der Container läuft:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`sudo docker ps\n`}</code></pre>\n    <ol {...{\n      \"start\": 6\n    }}>\n      <li parentName=\"ol\">{`Zeigen Sie die Umgebungsvariablen an, die Horizon in Ihren Service-Container übergibt:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`sudo docker inspect $(sudo docker ps -q --filter name=hello-$USER_ID) | jq '.[0].Config.Env'\n`}</code></pre>\n    <ol {...{\n      \"start\": 7\n    }}>\n      <li parentName=\"ol\">{`Zeigen Sie die Ausgabe Ihres helloworld-Dienstes an:`}</li>\n    </ol>\n    <Tabs mdxType=\"Tabs\">\n      <Tab label=\"RHEL\" mdxType=\"Tab\">\n        <pre><code parentName=\"pre\" {...{}}>{`sudo tail -f /var/log/messages | grep hello-$USER_ID\n`}</code></pre>\n      </Tab>\n      <Tab label=\"Raspian/Ubuntu\" mdxType=\"Tab\">\n        <pre><code parentName=\"pre\" {...{}}>{`sudo tail -f /var/log/syslog | grep hello-$USER_ID\n`}</code></pre>\n      </Tab>\n      <Tab label=\"macOS\" mdxType=\"Tab\">\n        <pre><code parentName=\"pre\" {...{}}>{`sudo docker logs -f $(sudo docker ps -q --filter name=hello-$USER_ID\n`}</code></pre>\n      </Tab>\n    </Tabs>\n    <ol {...{\n      \"start\": 8\n    }}>\n      <li parentName=\"ol\">{`Stoppen Sie den Dienst:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`sudo hzn dev service stop\n`}</code></pre>\n    <ol {...{\n      \"start\": 9\n    }}>\n      <li parentName=\"ol\">{`Weisen Sie Horizon an, Ihr Docker-Image in Ihre Registry zu pushen und Ihren Dienst in Horizon Exchange zu veröffentlichen:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`hzn exchange service publish -f horizon/service.definition.json\nhzn exchange service list\n`}</code></pre>\n    <p>{`Wenn Sie zur IBM Edge Application Manager-Benutzeroberfläche wechseln, sollten Sie Ihren Dienst auf der Registerkarte `}<strong parentName=\"p\">{`Services`}</strong>{` finden\n`}<img parentName=\"p\" {...{\n        \"src\": \"../images/IEAM-services.png\",\n        \"alt\": \"IEAM-services\"\n      }}></img></p>\n    <p>{`Klicken Sie auf den Dienst, um die Details zu erhalten\n`}<img parentName=\"p\" {...{\n        \"src\": \"../images/IEAM-service-details.png\",\n        \"alt\": \"IEAM-service-details\"\n      }}></img></p>\n    <p>{`Sie können nun fortfahren und den Dienst im nächsten Teil des Labs bereitstellen.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}