{"version":3,"sources":["webpack:///../instana-lab/src/pages/edge-lab/deploy-pattern/espanol.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","InlineNotification","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","kind","isMDXComponent"],"mappings":"wPAQaA,G,UAAe,IAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAkBL,EAAc,mBAChCM,EAAqBN,EAAc,sBACnCO,EAAc,CAClBR,gBAEIS,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGT,EACF,8BACD,OAAO,YAACM,EAAD,eAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,cAG5E,YAACP,EAAD,CAAiBO,QAAQ,mBACvB,8HAEF,+FACA,+EACA,qEAAoD,6BAAGC,WAAW,KAAQ,CACtE,KAAQ,uBADwC,+BAGpD,8FACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,oCAEL,+DACA,gJACA,2CAA0B,sBAAQA,WAAW,KAAnB,wBAA1B,wCACA,YAACP,EAAD,CAAoBQ,KAAK,OAAOF,QAAQ,sBACtC,qBAAG,sBAAQC,WAAW,KAAnB,SAAH,6HAEF,sEACA,sBACE,kBAAIA,WAAW,MAAf,8EAEF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,sFAGL,yEAAwD,sBAAQA,WAAW,KAAnB,YAAxD,oDACF,+BAAKA,WAAW,KAAQ,CAClB,IAAO,6BACP,IAAO,mBAEX,sEACF,+BAAKA,WAAW,KAAQ,CAClB,IAAO,qCACP,IAAO,2BAEX,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,6EAEF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,iEAEL,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,6RAEF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,0EAGL,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,sHAEF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,qBAEL,0HACF,+BAAKA,WAAW,KAAQ,CAClB,IAAO,+BACP,IAAO,qBAEX,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,2CAEF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,6CAEL,YAACP,EAAD,CAAoBQ,KAAK,OAAOF,QAAQ,sBACtC,qBAAG,sBAAQC,WAAW,KAAnB,SAAH,sDAEF,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,8EAAmG,kBAAIA,WAAW,MAAf,8BAAnG,OAEF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,yBAMTH,EAAWK,gBAAiB","file":"component---src-pages-edge-lab-deploy-pattern-espanol-mdx-802e2d55d3d36fdb059f.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mkeppel/Documents/GitHub/instana-lab/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`En esta sección desplegará el servicio de borde que creó en un paso anterior en su entorno de borde.`}</p>\n    </PageDescription>\n    <h2>{`Despliegue de un servicio de borde utilizando un patrón de despliegue`}</h2>\n    <h3>{`Condiciones previas para desplegar su propio servicio`}</h3>\n    <p>{`  Si aún no lo ha hecho, complete la sección `}<a parentName=\"p\" {...{\n        \"href\": \"../service/espanol\"\n      }}>{`Crear un servicio de borde`}</a></p>\n    <p>{`  También configure su USER_ID de nuevo si ha abierto un nuevo shell.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`export USER_ID=$DOCKER_HUB_ID\n`}</code></pre>\n    <h2>{`Definición de un patrón de despliegue`}</h2>\n    <p>{`Durante la creación del servicio de borde se ha creado una plantilla de patrón para usted en el directorio de horizonte`}</p>\n    <p>{`Examine el archivo `}<strong parentName=\"p\">{`horizon/pattern.json`}</strong>{` y fíjese en la estructura/opciones.`}</p>\n    <InlineNotification kind=\"info\" mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Nota:`}</strong>{` Algunas variables del patrón están definidas en otros archivos. Si lo desea, puede sustituirlas por los valores reales.`}</p>\n    </InlineNotification>\n    <h2>{`Publicar un patrón para el servicio de borde`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Publique y vea su patrón de despliegue del nodo edge en Horizon Exchange:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`hzn exchange pattern publish -f horizon/pattern.json\nhzn exchange pattern list\n`}</code></pre>\n    <p>{`El patrón ahora también es visible en la pestaña `}<strong parentName=\"p\">{`Patrones`}</strong>{` de la interfaz de IBM Edge Application Manager\n`}<img parentName=\"p\" {...{\n        \"src\": \"../images/IEAM-pattern.png\",\n        \"alt\": \"IEAM-pattern\"\n      }}></img></p>\n    <p>{`Haga clic en su patrón para ver los detalles\n`}<img parentName=\"p\" {...{\n        \"src\": \"../images/IEAM-pattern-details.png\",\n        \"alt\": \"IEAM-pattern-details\"\n      }}></img></p>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Registre su nodo Edge con Horizon para utilizar su patrón de despliegue:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`hzn register -p pattern-hello-$USER_ID-$(hzn architecture)\n`}</code></pre>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`El dispositivo de borde establecerá un acuerdo con uno de los robots de acuerdo de Horizon (esto suele tardar unos 15 segundos). 4. Consulte repetidamente los acuerdos de este dispositivo hasta que se completen los campos agreement_finalized_time y agreement_execution_start_time:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`watch hzn agreement list\n# Press Ctrl-c to stop the output display\n`}</code></pre>\n    <ol {...{\n      \"start\": 4\n    }}>\n      <li parentName=\"ol\">{`Una vez realizado el acuerdo, liste el servicio de borde del contenedor Docker que se ha iniciado como resultado:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`sudo docker ps\n`}</code></pre>\n    <p>{`También verá el despliegue de patrones en la interfaz de usuario de IBM Edge Application Manager\n`}<img parentName=\"p\" {...{\n        \"src\": \"../images/IEAM-mypattern.png\",\n        \"alt\": \"IEAM-mypattern\"\n      }}></img></p>\n    <ol {...{\n      \"start\": 5\n    }}>\n      <li parentName=\"ol\">{`Vea la salida del servicio helloworld:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`sudo hzn service log -f hello-$USER_ID\n`}</code></pre>\n    <InlineNotification kind=\"info\" mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Nota:`}</strong>{` Pulse Ctrl C para detener la salida del comando.`}</p>\n    </InlineNotification>\n    <ol {...{\n      \"start\": 6\n    }}>\n      <li parentName=\"ol\">{`Anule el registro de su nodo de borde (lo que también detendrá el servicio `}<em parentName=\"li\">{`hello-`}{`<`}{`su-nombre`}{`>`}</em>{`):`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`hzn unregister -f\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}