{"version":3,"sources":["webpack:///../instana-lab/src/pages/guides/MDX.mdx"],"names":["name","Title","_frontmatter","PageDescription","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"kOAasBA,E,4DALTC,G,UAAQ,kBAAM,sCACZ,uBADY,kBAGdC,EAAe,GAOtBC,GALgBH,EAKgB,kBALR,SAA6BI,GAEzD,OADAC,QAAQC,KAAK,aAAeN,EAAO,2EAC5B,kBAASI,KAIZG,EAAc,CAClBN,QACAC,gBAEIM,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,EACF,8BACD,OAAO,YAACI,EAAD,eAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,cAI5E,YAACT,EAAD,CAAiBS,QAAQ,mBACvB,4LAGA,sPAIF,qCACA,4DAA2C,0BAAYC,WAAW,KAAvB,QAA3C,8DAEA,sBACE,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,SAApB,6CACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,eAApB,4BACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,YAApB,yBACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,oBAApB,iDAEF,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,gKASL,sCACA,sQAGF,6BAAGA,WAAW,KAAQ,CAChB,KAAQ,0CADd,kBAHE,8DAOA,sCACA,yCAAwB,0BAAYA,WAAW,KAAvB,SAAxB,mJAGA,qBAAG,sBAAQA,WAAW,KAAnB,SAAH,oIAEA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,6JAmBTH,EAAWI,gBAAiB","file":"component---src-pages-guides-mdx-mdx-5af401603a107a7e3105.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mkeppel/Documents/GitHub/instana-lab/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const Title = () => <span>\n    First line <br /> Second line\n  </span>;\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst layoutProps = {\n  Title,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`MDX allows for certain things beyond what markdown is capable of. Content here\nwill discuss using those features to augment or modify the default content\nlayout.`}</p>\n      <p>{`It’s extremly important that for any rich text, or images represented through\nmark down, that they are left aligned. This is true even if they are within a\ncomponent. Otherwise it will be processed as a regular string.`}</p>\n    </PageDescription>\n    <h2>{`Frontmatter`}</h2>\n    <p>{`You can declare frontmatter in your `}<inlineCode parentName=\"p\">{`.mdx`}</inlineCode>{` files to provide specific metadata\nfor the theme to use.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`title`}</inlineCode>{`: Main page title: search results and SEO`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`description`}</inlineCode>{`: SEO and search results`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`keywords`}</inlineCode>{`: just SEO (optional)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`hiddenFromSearch`}</inlineCode>{`: if true, page will be excluded from search`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-md\"\n      }}>{`---\ntitle: Markdown\ndescription: Usage instructions for the Markdown component\nkeywords: 'ibm,carbon,gatsby,mdx,markdown'\nhiddenFromSearch: true\n---\n`}</code></pre>\n    <h2>{`Smart quotes`}</h2>\n    <p>{`The theme has a remark for processing straight quotes, into ‘smart’ quotes (”).\nHowever, this plugin isn’t able to process text used in custom MDX components.\nWhen using quotes in custom components, content authors should manually use\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.figma.com/design-systems/\"\n      }}>{`“smart quotes”`}</a>{` to adhere to the IBM\nDesign Language content guidelines.`}</p>\n    <h2>{`Custom title`}</h2>\n    <p>{`You can export a `}<inlineCode parentName=\"p\">{`Title`}</inlineCode>{` component in order to render a unique title for a\nsingle page. This is particularly useful for including line breaks at a specific\nlocation.`}</p>\n    <p><strong parentName=\"p\">{`Note:`}</strong>{` You still need to provide a regular string title to the frontmatter\nfor search, navigation, and the HTML header title to work.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-mdx\"\n      }}>{`---\ntitle: MDX\ndescription: custom title page\n---\n\nexport const Title = () => (\n  <span>\n    First line <br /> Second line\n  </span>\n);\n\n;\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}