{"version":3,"sources":["webpack:///../instana-lab/src/pages/components/MiniCard.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","InlineNotification","Title","CardGroup","MiniCard","Row","Column","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","title","href","actionIcon","colLg","gutterLg","isMDXComponent"],"mappings":"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","file":"component---src-pages-components-mini-card-mdx-839e9d2e71b4abd02d5c.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mkeppel/Documents/GitHub/instana-lab/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst Title = makeShortcode(\"Title\");\nconst CardGroup = makeShortcode(\"CardGroup\");\nconst MiniCard = makeShortcode(\"MiniCard\");\nconst Row = makeShortcode(\"Row\");\nconst Column = makeShortcode(\"Column\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`The `}<inlineCode parentName=\"p\">{`<MiniCard>`}</inlineCode>{` component can be used in place of a `}<inlineCode parentName=\"p\">{`<ResourceCard>`}</inlineCode>{` if your\ncontent allows it. Unless it is sitting aside your main conent, it should always\nbe wrapped inside of a `}<inlineCode parentName=\"p\">{`<CardGroup>`}</inlineCode>{`. This allows the correct gutter and border\nplacement between a group of cards.`}</p>\n    </PageDescription>\n    <InlineNotification mdxType=\"InlineNotification\">\n  Although the mini-resource card has a similar geometry to the button\n  component, they should not be used in place of a button. Buttons encourage\n  action from the user and affect the website's front-end or back-end. The\n  resource cards, both large and mini are essentially links. They are used for\n  navigation and actions that do not affect the website.\n    </InlineNotification>\n    <h2>{`Example`}</h2>\n    <Title mdxType=\"Title\">Group</Title>\n    <CardGroup mdxType=\"CardGroup\">\n      <MiniCard title=\"26 characters per MiniCard\" href=\"/demo\" mdxType=\"MiniCard\">\n        <img {...{\n          \"src\": \"/images/adobe-icon.svg\",\n          \"alt\": \"Adobe Acrobat icon\"\n        }}></img>\n      </MiniCard>\n      <MiniCard title=\"Use the default icon\" href=\"/demo\" mdxType=\"MiniCard\" />\n      <MiniCard title=\"Choose from other icons\" href=\"/demo\" actionIcon=\"arrowRight\" mdxType=\"MiniCard\" />\n      <MiniCard title=\"Or bring your own\" href=\"/demo\" mdxType=\"MiniCard\">\n        <img {...{\n          \"src\": \"/images/sketch-icon.png\",\n          \"alt\": \"Github icon\"\n        }}></img>\n      </MiniCard>\n    </CardGroup>\n    <Title mdxType=\"Title\">Aside</Title>\n    <Row mdxType=\"Row\">\n      <Column colLg={8} mdxType=\"Column\">\n        <p>{`When you have the mini resource card sitting aside the main content, be sure to\nadd the `}<inlineCode parentName=\"p\">{`gutterLg`}</inlineCode>{`, properties to the `}<inlineCode parentName=\"p\">{`<MiniCard>`}</inlineCode>{`. This will ensure the\nMiniCard has the appropriate gutters at the approriate breakpoints.`}</p>\n      </Column>\n      <MiniCard gutterLg title=\"By itself, as an Aside\" href=\"https://gatsby-theme-carbon.now.sh\" mdxType=\"MiniCard\">\n        <img {...{\n          \"src\": \"/images/sketch-icon.png\",\n          \"alt\": \"Sketch icon\"\n        }}></img>\n      </MiniCard>\n    </Row>\n    <h2>{`Code`}</h2>\n    <Title mdxType=\"Title\">Group</Title>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-mdx\",\n        \"metastring\": \"path=components/MiniCard/MiniCard.js src=https://github.com/carbon-design-system/gatsby-theme-carbon/tree/main/packages/gatsby-theme-carbon/src/components/MiniCard\",\n        \"path\": \"components/MiniCard/MiniCard.js\",\n        \"src\": \"https://github.com/carbon-design-system/gatsby-theme-carbon/tree/main/packages/gatsby-theme-carbon/src/components/MiniCard\"\n      }}>{`<CardGroup>\n  <MiniCard title=\"26 characters per MiniCard\" href=\"/demo\">\n    ![Adobe Acrobat icon](/images/adobe-icon.svg)\n  </MiniCard>\n  <MiniCard title=\"Use the default icon\" href=\"/demo\" />\n  <MiniCard\n    title=\"Choose from other icons\"\n    href=\"/demo\"\n    actionIcon=\"arrowRight\"\n  />\n  <MiniCard title=\"Or bring your own\" href=\"/demo\">\n    ![Github icon](/images/sketch-icon.png)\n  </MiniCard>\n</CardGroup>\n`}</code></pre>\n    <Title mdxType=\"Title\">Aside</Title>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-mdx\",\n        \"metastring\": \"path=components/MiniCard/MiniCard.js src=https://github.com/carbon-design-system/gatsby-theme-carbon/tree/main/packages/gatsby-theme-carbon/src/components/MiniCard\",\n        \"path\": \"components/MiniCard/MiniCard.js\",\n        \"src\": \"https://github.com/carbon-design-system/gatsby-theme-carbon/tree/main/packages/gatsby-theme-carbon/src/components/MiniCard\"\n      }}>{`<Row>\n<Column colLg={8}>\n\n\nWhen you have the mini resource card sitting aside the main content, be sure to\nadd the \\`gutterLg\\`, properties to the \\`<MiniCard>\\`. This will ensure the\nMiniCard has the appropriate gutters at the approriate breakpoints.\n\n</Column>\n<MiniCard\n  gutterLg\n  title=\"By itself, as an Aside\"\n  href=\"https://gatsby-theme-carbon.now.sh\"\n  >\n\n\n![Sketch icon](/images/sketch-icon.png)\n\n</MiniCard>\n</Row>\n\n`}</code></pre>\n    <h3>{`Props`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`propType`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`default`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`children`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`node`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use 32x32 image as child, will display in right-hand corner of the card`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`href`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Set url for card`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`title`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Title for the card`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`actionIcon`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`launch`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Action icon, default is launch, options are `}<inlineCode parentName=\"td\">{`launch`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`arrowRight`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`download`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`disabled`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`email`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`className`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Add custom class name`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}