{"version":3,"sources":["webpack:///../instana-lab/src/pages/edge-lab/service/espanol.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","Tabs","Tab","InlineNotification","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","label","kind","isMDXComponent"],"mappings":"wPAQaA,G,UAAe,IAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAkBL,EAAc,mBAChCM,EAAON,EAAc,QACrBO,EAAMP,EAAc,OACpBQ,EAAqBR,EAAc,sBACnCS,EAAc,CAClBV,gBAEIW,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGX,EACF,8BACD,OAAO,YAACQ,EAAD,eAAeD,EAAiBP,EAAhC,CAAuCW,WAAYA,EAAYC,QAAQ,cAG5E,YAACT,EAAD,CAAiBS,QAAQ,mBACvB,sKAEF,yEACA,mKACA,sBACE,kBAAIC,WAAW,MAAf,kEAEF,sBACE,kBAAIA,WAAW,MAAf,4EACA,kBAAIA,WAAW,MAAf,gFAEF,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,6GAEF,sBACE,kBAAIA,WAAW,MAAf,6CACA,kBAAIA,WAAW,MAAf,wGAEF,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,kDAAuE,6BAAGA,WAAW,MAAS,CAC1F,KAAQ,4BAD2D,kBAAvE,mEAIF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,yHAGL,2CACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,sPAML,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,kKAEF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,8CAEL,uJACA,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,sBAEF,YAACT,EAAD,CAAMQ,QAAQ,QACZ,YAACP,EAAD,CAAKS,MAAM,OAAOF,QAAQ,OACxB,uBAAK,gCAAMC,WAAW,OAAU,IAA3B,kCAGP,YAACR,EAAD,CAAKS,MAAM,iBAAiBF,QAAQ,OAClC,uBAAK,gCAAMC,WAAW,OAAU,IAA3B,kCAGP,YAACR,EAAD,CAAKS,MAAM,QAAQF,QAAQ,OACzB,uBAAK,gCAAMC,WAAW,OAAU,IAA3B,4BAIT,mEACA,sBACE,kBAAIA,WAAW,MAAf,yMAEF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,6GAGL,YAACP,EAAD,CAAoBS,KAAK,OAAOH,QAAQ,sBACtC,qBAAG,sBAAQC,WAAW,KAAnB,SAAH,sKAEF,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,wFAEF,YAACP,EAAD,CAAoBS,KAAK,OAAOH,QAAQ,sBACtC,qBAAG,sBAAQC,WAAW,KAAnB,SAAH,mHAEF,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,yCAEF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,WAEL,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,uEAEF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,oCAEL,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,wDAEF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,qBAEL,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,sFAEF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,mGAEL,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,mDAEF,YAACT,EAAD,CAAMQ,QAAQ,QACZ,YAACP,EAAD,CAAKS,MAAM,OAAOF,QAAQ,OACxB,uBAAK,gCAAMC,WAAW,OAAU,IAA3B,4DAGP,YAACR,EAAD,CAAKS,MAAM,iBAAiBF,QAAQ,OAClC,uBAAK,gCAAMC,WAAW,OAAU,IAA3B,0DAGP,YAACR,EAAD,CAAKS,MAAM,QAAQF,QAAQ,OACzB,uBAAK,gCAAMC,WAAW,OAAU,IAA3B,6EAIT,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,yBAEF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,gCAEL,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,4GAEF,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,iGAGL,mJACF,6BAAGA,WAAW,KAAQ,CAChB,KAAQ,gCADd,kBAGE,4EACF,+BAAKA,WAAW,KAAQ,CAClB,IAAO,qCACP,IAAO,2BAEX,6GAKJH,EAAWM,gBAAiB","file":"component---src-pages-edge-lab-service-espanol-mdx-0a78902db8c90ac63ccb.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mkeppel/Documents/GitHub/instana-lab/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst Tabs = makeShortcode(\"Tabs\");\nconst Tab = makeShortcode(\"Tab\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`En esta sección creará/desarrollará un servicio de ejemplo, que publicará en IBM Edge Application Manager y desplegará en un paso posterior.`}</p>\n    </PageDescription>\n    <h2>{`Creación de su propio servicio Edge Hello World`}</h2>\n    <p>{`Siga los pasos de esta página para crear su primer servicio Horizon Edge sencillo. Condiciones previas para desarrollar su propio servicio`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Si aún no lo ha hecho, complete los pasos de estas secciones:`}</li>\n    </ol>\n    <ul>\n      <li parentName=\"ul\">{`Condiciones previas para utilizar el servicio Edge de ejemplo Hola Mundo`}</li>\n      <li parentName=\"ul\">{`Uso del servicio Edge de ejemplo Hola Mundo con el patrón de implementación`}</li>\n    </ul>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Si utiliza macOS como host de desarrollo, configure Docker para almacenar las credenciales en ~/.docker:`}</li>\n    </ol>\n    <ul>\n      <li parentName=\"ul\">{`Abra el diálogo de Preferencias de Docker`}</li>\n      <li parentName=\"ul\">{`Desmarca la opción Almacenar de forma segura los inicios de sesión de Docker en el llavero de macOS`}</li>\n    </ul>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`Si aún no tienes un ID de Docker, obtén uno en `}<a parentName=\"li\" {...{\n          \"href\": \"https://hub.docker.com/\"\n        }}>{`hub.docker.com`}</a>{` . Inicie sesión en Docker Hub utilizando su ID de Docker Hub:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`export DOCKER_HUB_ID=\"<dockerhubid>\"\necho \"<dockerhubpassword>\" | docker login -u $DOCKER_HUB_ID --password-stdin\n`}</code></pre>\n    <p>{`Ejemplo de salida:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`WARNING! Your password will be stored unencrypted in /home/pi/.docker/config.json.\nConfigure a credential helper to remove this warning. See\nhttps://docs.docker.com/engine/reference/commandline/login/#credentials-store\n\nLogin Succeeded\n`}</code></pre>\n    <ol {...{\n      \"start\": 4\n    }}>\n      <li parentName=\"ol\">{`Cree un par de claves criptográficas de firma. Esto le permite firmar los servicios al publicarlos en el intercambio. Este paso sólo debe realizarse una vez.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`hzn key create \"<x509-org>\" \"<x509-cn>\"\n`}</code></pre>\n    <p>{`donde `}{`<`}{`x509-org`}{`>`}{` es el nombre de su empresa, y `}{`<`}{`x509-cn`}{`>`}{` suele ser su dirección de correo electrónico.`}</p>\n    <ol {...{\n      \"start\": 5\n    }}>\n      <li parentName=\"ol\">{`Instala git y jq:`}</li>\n    </ol>\n    <Tabs mdxType=\"Tabs\">\n      <Tab label=\"RHEL\" mdxType=\"Tab\">\n        <pre><code parentName=\"pre\" {...{}}>{`sudo yum install -y git jq\n`}</code></pre>\n      </Tab>\n      <Tab label=\"Raspian/Ubuntu\" mdxType=\"Tab\">\n        <pre><code parentName=\"pre\" {...{}}>{`sudo apt install -y git jq\n`}</code></pre>\n      </Tab>\n      <Tab label=\"macOS\" mdxType=\"Tab\">\n        <pre><code parentName=\"pre\" {...{}}>{`brew install git jq\n`}</code></pre>\n      </Tab>\n    </Tabs>\n    <h2>{`Construir y publicar el servicio de borde`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Vaya al directorio en el que desea crear su nuevo servicio y, a continuación, ejecute este comando para crear los archivos de un servicio Edge simple y los archivos de metadatos Horizon asociados:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`export USER_ID=<your-userID>\nhzn dev service new -s hello-$USER_ID -i \"$DOCKER_HUB_ID/hello-$USER_ID\"\n`}</code></pre>\n    <InlineNotification kind=\"info\" mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Tenga`}</strong>{` en cuenta que algunas variables del proyecto están definidas en horizon/hzn.json y referenciadas en otros archivos, por ejemplo horizon/service.definition.json.`}</p>\n    </InlineNotification>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`editar service.sh y cambiar algo sencillo, por ejemplo, cambiar “Hello” por “Hola”.`}</li>\n    </ol>\n    <InlineNotification kind=\"info\" mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Nota:`}</strong>{` Este servicio es un script de shell para simplificar, pero puedes escribir tu servicio en cualquier lenguaje.`}</p>\n    </InlineNotification>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`Crear la imagen Docker del servicio:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`make\n`}</code></pre>\n    <ol {...{\n      \"start\": 4\n    }}>\n      <li parentName=\"ol\">{`Probar el servicio ejecutándolo en el entorno del agente simulado:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`sudo hzn dev service start -S\n`}</code></pre>\n    <ol {...{\n      \"start\": 5\n    }}>\n      <li parentName=\"ol\">{`Verificar que el contenedor está en funcionamiento:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`sudo docker ps\n`}</code></pre>\n    <ol {...{\n      \"start\": 6\n    }}>\n      <li parentName=\"ol\">{`Visualice las variables de entorno que Horizon pasa a su contenedor de servicios:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`sudo docker inspect $(sudo docker ps -q --filter name=hello-$USER_ID) | jq '.[0].Config.Env'\n`}</code></pre>\n    <ol {...{\n      \"start\": 7\n    }}>\n      <li parentName=\"ol\">{`Visualiza la salida de tu servicio helloworld:`}</li>\n    </ol>\n    <Tabs mdxType=\"Tabs\">\n      <Tab label=\"RHEL\" mdxType=\"Tab\">\n        <pre><code parentName=\"pre\" {...{}}>{`sudo tail -f /var/log/messages | grep hello-$USER_ID\n`}</code></pre>\n      </Tab>\n      <Tab label=\"Raspian/Ubuntu\" mdxType=\"Tab\">\n        <pre><code parentName=\"pre\" {...{}}>{`sudo tail -f /var/log/syslog | grep hello-$USER_ID\n`}</code></pre>\n      </Tab>\n      <Tab label=\"macOS\" mdxType=\"Tab\">\n        <pre><code parentName=\"pre\" {...{}}>{`sudo docker logs -f $(sudo docker ps -q --filter name=hello-$USER_ID\n`}</code></pre>\n      </Tab>\n    </Tabs>\n    <ol {...{\n      \"start\": 8\n    }}>\n      <li parentName=\"ol\">{`Detener el servicio:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`sudo hzn dev service stop\n`}</code></pre>\n    <ol {...{\n      \"start\": 9\n    }}>\n      <li parentName=\"ol\">{`Indique a Horizon que empuje su imagen Docker a su registro y publique su servicio en Horizon Exchange:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`hzn exchange service publish -f horizon/service.definition.json\nhzn exchange service list\n`}</code></pre>\n    <p>{`Si cambia a la interfaz de usuario de IBM Edge Application Manager, debería encontrar su servicio en la pestaña Servicios\n`}<a parentName=\"p\" {...{\n        \"href\": \"../images/IEAM-services.png\"\n      }}>{`IEAM-services`}</a></p>\n    <p>{`Haga clic en el servicio para obtener los detalles\n`}<img parentName=\"p\" {...{\n        \"src\": \"../images/IEAM-service-details.png\",\n        \"alt\": \"IEAM-service-details\"\n      }}></img></p>\n    <p>{`Ahora puede proceder y desplegar el servicio en la siguiente parte del laboratorio.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}